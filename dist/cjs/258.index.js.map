{"version":3,"file":"258.index.js","mappings":"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","sources":["webpack://arcraft/./node_modules/.pnpm/@aws-sdk+nested-clients@3.826.0/node_modules/@aws-sdk/nested-clients/dist-es/submodules/sts/auth/httpAuthSchemeProvider.js","webpack://arcraft/./node_modules/.pnpm/@aws-sdk+nested-clients@3.826.0/node_modules/@aws-sdk/nested-clients/dist-es/submodules/sts/endpoint/EndpointParameters.js","webpack://arcraft/./node_modules/.pnpm/@aws-sdk+nested-clients@3.826.0/node_modules/@aws-sdk/nested-clients/dist-es/submodules/sts/endpoint/ruleset.js","webpack://arcraft/./node_modules/.pnpm/@aws-sdk+nested-clients@3.826.0/node_modules/@aws-sdk/nested-clients/dist-es/submodules/sts/endpoint/endpointResolver.js","webpack://arcraft/./node_modules/.pnpm/@aws-sdk+nested-clients@3.826.0/node_modules/@aws-sdk/nested-clients/dist-es/submodules/sts/STSClient.js","webpack://arcraft/./node_modules/.pnpm/@aws-sdk+nested-clients@3.826.0/node_modules/@aws-sdk/nested-clients/dist-es/submodules/sts/runtimeConfig.js","webpack://arcraft/./node_modules/.pnpm/@aws-sdk+nested-clients@3.826.0/node_modules/@aws-sdk/nested-clients/dist-es/submodules/sts/runtimeConfig.shared.js","webpack://arcraft/./node_modules/.pnpm/@aws-sdk+nested-clients@3.826.0/node_modules/@aws-sdk/nested-clients/dist-es/submodules/sts/runtimeExtensions.js","webpack://arcraft/./node_modules/.pnpm/@aws-sdk+nested-clients@3.826.0/node_modules/@aws-sdk/nested-clients/dist-es/submodules/sts/auth/httpAuthExtensionConfiguration.js","webpack://arcraft/./node_modules/.pnpm/@aws-sdk+nested-clients@3.826.0/node_modules/@aws-sdk/nested-clients/dist-es/submodules/sts/models/STSServiceException.js","webpack://arcraft/./node_modules/.pnpm/@aws-sdk+nested-clients@3.826.0/node_modules/@aws-sdk/nested-clients/dist-es/submodules/sts/models/models_0.js","webpack://arcraft/./node_modules/.pnpm/@aws-sdk+nested-clients@3.826.0/node_modules/@aws-sdk/nested-clients/dist-es/submodules/sts/protocols/Aws_query.js","webpack://arcraft/./node_modules/.pnpm/@aws-sdk+nested-clients@3.826.0/node_modules/@aws-sdk/nested-clients/dist-es/submodules/sts/commands/AssumeRoleCommand.js","webpack://arcraft/./node_modules/.pnpm/@aws-sdk+nested-clients@3.826.0/node_modules/@aws-sdk/nested-clients/dist-es/submodules/sts/commands/AssumeRoleWithWebIdentityCommand.js","webpack://arcraft/./node_modules/.pnpm/@aws-sdk+nested-clients@3.826.0/node_modules/@aws-sdk/nested-clients/dist-es/submodules/sts/STS.js","webpack://arcraft/./node_modules/.pnpm/@aws-sdk+nested-clients@3.826.0/node_modules/@aws-sdk/nested-clients/dist-es/submodules/sts/defaultStsRoleAssumers.js","webpack://arcraft/./node_modules/.pnpm/@aws-sdk+nested-clients@3.826.0/node_modules/@aws-sdk/nested-clients/dist-es/submodules/sts/defaultRoleAssumers.js"],"sourcesContent":["import { resolveAwsSdkSigV4Config, } from \"@aws-sdk/core\";\nimport { getSmithyContext, normalizeProvider } from \"@smithy/util-middleware\";\nimport { STSClient } from \"../STSClient\";\nexport const defaultSTSHttpAuthSchemeParametersProvider = async (config, context, input) => {\n    return {\n        operation: getSmithyContext(context).operation,\n        region: (await normalizeProvider(config.region)()) ||\n            (() => {\n                throw new Error(\"expected `region` to be configured for `aws.auth#sigv4`\");\n            })(),\n    };\n};\nfunction createAwsAuthSigv4HttpAuthOption(authParameters) {\n    return {\n        schemeId: \"aws.auth#sigv4\",\n        signingProperties: {\n            name: \"sts\",\n            region: authParameters.region,\n        },\n        propertiesExtractor: (config, context) => ({\n            signingProperties: {\n                config,\n                context,\n            },\n        }),\n    };\n}\nfunction createSmithyApiNoAuthHttpAuthOption(authParameters) {\n    return {\n        schemeId: \"smithy.api#noAuth\",\n    };\n}\nexport const defaultSTSHttpAuthSchemeProvider = (authParameters) => {\n    const options = [];\n    switch (authParameters.operation) {\n        case \"AssumeRoleWithWebIdentity\": {\n            options.push(createSmithyApiNoAuthHttpAuthOption(authParameters));\n            break;\n        }\n        default: {\n            options.push(createAwsAuthSigv4HttpAuthOption(authParameters));\n        }\n    }\n    return options;\n};\nexport const resolveStsAuthConfig = (input) => Object.assign(input, {\n    stsClientCtor: STSClient,\n});\nexport const resolveHttpAuthSchemeConfig = (config) => {\n    const config_0 = resolveStsAuthConfig(config);\n    const config_1 = resolveAwsSdkSigV4Config(config_0);\n    return Object.assign(config_1, {\n        authSchemePreference: normalizeProvider(config.authSchemePreference ?? []),\n    });\n};\n","export const resolveClientEndpointParameters = (options) => {\n    return Object.assign(options, {\n        useDualstackEndpoint: options.useDualstackEndpoint ?? false,\n        useFipsEndpoint: options.useFipsEndpoint ?? false,\n        useGlobalEndpoint: options.useGlobalEndpoint ?? false,\n        defaultSigningName: \"sts\",\n    });\n};\nexport const commonParams = {\n    UseGlobalEndpoint: { type: \"builtInParams\", name: \"useGlobalEndpoint\" },\n    UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n    Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n    Region: { type: \"builtInParams\", name: \"region\" },\n    UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n};\n","const F = \"required\", G = \"type\", H = \"fn\", I = \"argv\", J = \"ref\";\nconst a = false, b = true, c = \"booleanEquals\", d = \"stringEquals\", e = \"sigv4\", f = \"sts\", g = \"us-east-1\", h = \"endpoint\", i = \"https://sts.{Region}.{PartitionResult#dnsSuffix}\", j = \"tree\", k = \"error\", l = \"getAttr\", m = { [F]: false, [G]: \"String\" }, n = { [F]: true, \"default\": false, [G]: \"Boolean\" }, o = { [J]: \"Endpoint\" }, p = { [H]: \"isSet\", [I]: [{ [J]: \"Region\" }] }, q = { [J]: \"Region\" }, r = { [H]: \"aws.partition\", [I]: [q], \"assign\": \"PartitionResult\" }, s = { [J]: \"UseFIPS\" }, t = { [J]: \"UseDualStack\" }, u = { \"url\": \"https://sts.amazonaws.com\", \"properties\": { \"authSchemes\": [{ \"name\": e, \"signingName\": f, \"signingRegion\": g }] }, \"headers\": {} }, v = {}, w = { \"conditions\": [{ [H]: d, [I]: [q, \"aws-global\"] }], [h]: u, [G]: h }, x = { [H]: c, [I]: [s, true] }, y = { [H]: c, [I]: [t, true] }, z = { [H]: l, [I]: [{ [J]: \"PartitionResult\" }, \"supportsFIPS\"] }, A = { [J]: \"PartitionResult\" }, B = { [H]: c, [I]: [true, { [H]: l, [I]: [A, \"supportsDualStack\"] }] }, C = [{ [H]: \"isSet\", [I]: [o] }], D = [x], E = [y];\nconst _data = { version: \"1.0\", parameters: { Region: m, UseDualStack: n, UseFIPS: n, Endpoint: m, UseGlobalEndpoint: n }, rules: [{ conditions: [{ [H]: c, [I]: [{ [J]: \"UseGlobalEndpoint\" }, b] }, { [H]: \"not\", [I]: C }, p, r, { [H]: c, [I]: [s, a] }, { [H]: c, [I]: [t, a] }], rules: [{ conditions: [{ [H]: d, [I]: [q, \"ap-northeast-1\"] }], endpoint: u, [G]: h }, { conditions: [{ [H]: d, [I]: [q, \"ap-south-1\"] }], endpoint: u, [G]: h }, { conditions: [{ [H]: d, [I]: [q, \"ap-southeast-1\"] }], endpoint: u, [G]: h }, { conditions: [{ [H]: d, [I]: [q, \"ap-southeast-2\"] }], endpoint: u, [G]: h }, w, { conditions: [{ [H]: d, [I]: [q, \"ca-central-1\"] }], endpoint: u, [G]: h }, { conditions: [{ [H]: d, [I]: [q, \"eu-central-1\"] }], endpoint: u, [G]: h }, { conditions: [{ [H]: d, [I]: [q, \"eu-north-1\"] }], endpoint: u, [G]: h }, { conditions: [{ [H]: d, [I]: [q, \"eu-west-1\"] }], endpoint: u, [G]: h }, { conditions: [{ [H]: d, [I]: [q, \"eu-west-2\"] }], endpoint: u, [G]: h }, { conditions: [{ [H]: d, [I]: [q, \"eu-west-3\"] }], endpoint: u, [G]: h }, { conditions: [{ [H]: d, [I]: [q, \"sa-east-1\"] }], endpoint: u, [G]: h }, { conditions: [{ [H]: d, [I]: [q, g] }], endpoint: u, [G]: h }, { conditions: [{ [H]: d, [I]: [q, \"us-east-2\"] }], endpoint: u, [G]: h }, { conditions: [{ [H]: d, [I]: [q, \"us-west-1\"] }], endpoint: u, [G]: h }, { conditions: [{ [H]: d, [I]: [q, \"us-west-2\"] }], endpoint: u, [G]: h }, { endpoint: { url: i, properties: { authSchemes: [{ name: e, signingName: f, signingRegion: \"{Region}\" }] }, headers: v }, [G]: h }], [G]: j }, { conditions: C, rules: [{ conditions: D, error: \"Invalid Configuration: FIPS and custom endpoint are not supported\", [G]: k }, { conditions: E, error: \"Invalid Configuration: Dualstack and custom endpoint are not supported\", [G]: k }, { endpoint: { url: o, properties: v, headers: v }, [G]: h }], [G]: j }, { conditions: [p], rules: [{ conditions: [r], rules: [{ conditions: [x, y], rules: [{ conditions: [{ [H]: c, [I]: [b, z] }, B], rules: [{ endpoint: { url: \"https://sts-fips.{Region}.{PartitionResult#dualStackDnsSuffix}\", properties: v, headers: v }, [G]: h }], [G]: j }, { error: \"FIPS and DualStack are enabled, but this partition does not support one or both\", [G]: k }], [G]: j }, { conditions: D, rules: [{ conditions: [{ [H]: c, [I]: [z, b] }], rules: [{ conditions: [{ [H]: d, [I]: [{ [H]: l, [I]: [A, \"name\"] }, \"aws-us-gov\"] }], endpoint: { url: \"https://sts.{Region}.amazonaws.com\", properties: v, headers: v }, [G]: h }, { endpoint: { url: \"https://sts-fips.{Region}.{PartitionResult#dnsSuffix}\", properties: v, headers: v }, [G]: h }], [G]: j }, { error: \"FIPS is enabled but this partition does not support FIPS\", [G]: k }], [G]: j }, { conditions: E, rules: [{ conditions: [B], rules: [{ endpoint: { url: \"https://sts.{Region}.{PartitionResult#dualStackDnsSuffix}\", properties: v, headers: v }, [G]: h }], [G]: j }, { error: \"DualStack is enabled but this partition does not support DualStack\", [G]: k }], [G]: j }, w, { endpoint: { url: i, properties: v, headers: v }, [G]: h }], [G]: j }], [G]: j }, { error: \"Invalid Configuration: Missing Region\", [G]: k }] };\nexport const ruleSet = _data;\n","import { awsEndpointFunctions } from \"@aws-sdk/util-endpoints\";\nimport { customEndpointFunctions, EndpointCache, resolveEndpoint } from \"@smithy/util-endpoints\";\nimport { ruleSet } from \"./ruleset\";\nconst cache = new EndpointCache({\n    size: 50,\n    params: [\"Endpoint\", \"Region\", \"UseDualStack\", \"UseFIPS\", \"UseGlobalEndpoint\"],\n});\nexport const defaultEndpointResolver = (endpointParams, context = {}) => {\n    return cache.get(endpointParams, () => resolveEndpoint(ruleSet, {\n        endpointParams: endpointParams,\n        logger: context.logger,\n    }));\n};\ncustomEndpointFunctions.aws = awsEndpointFunctions;\n","import { getHostHeaderPlugin, resolveHostHeaderConfig, } from \"@aws-sdk/middleware-host-header\";\nimport { getLoggerPlugin } from \"@aws-sdk/middleware-logger\";\nimport { getRecursionDetectionPlugin } from \"@aws-sdk/middleware-recursion-detection\";\nimport { getUserAgentPlugin, resolveUserAgentConfig, } from \"@aws-sdk/middleware-user-agent\";\nimport { resolveRegionConfig } from \"@smithy/config-resolver\";\nimport { DefaultIdentityProviderConfig, getHttpAuthSchemeEndpointRuleSetPlugin, getHttpSigningPlugin, } from \"@smithy/core\";\nimport { getContentLengthPlugin } from \"@smithy/middleware-content-length\";\nimport { resolveEndpointConfig } from \"@smithy/middleware-endpoint\";\nimport { getRetryPlugin, resolveRetryConfig } from \"@smithy/middleware-retry\";\nimport { Client as __Client, } from \"@smithy/smithy-client\";\nimport { defaultSTSHttpAuthSchemeParametersProvider, resolveHttpAuthSchemeConfig, } from \"./auth/httpAuthSchemeProvider\";\nimport { resolveClientEndpointParameters, } from \"./endpoint/EndpointParameters\";\nimport { getRuntimeConfig as __getRuntimeConfig } from \"./runtimeConfig\";\nimport { resolveRuntimeExtensions } from \"./runtimeExtensions\";\nexport { __Client };\nexport class STSClient extends __Client {\n    config;\n    constructor(...[configuration]) {\n        const _config_0 = __getRuntimeConfig(configuration || {});\n        super(_config_0);\n        this.initConfig = _config_0;\n        const _config_1 = resolveClientEndpointParameters(_config_0);\n        const _config_2 = resolveUserAgentConfig(_config_1);\n        const _config_3 = resolveRetryConfig(_config_2);\n        const _config_4 = resolveRegionConfig(_config_3);\n        const _config_5 = resolveHostHeaderConfig(_config_4);\n        const _config_6 = resolveEndpointConfig(_config_5);\n        const _config_7 = resolveHttpAuthSchemeConfig(_config_6);\n        const _config_8 = resolveRuntimeExtensions(_config_7, configuration?.extensions || []);\n        this.config = _config_8;\n        this.middlewareStack.use(getUserAgentPlugin(this.config));\n        this.middlewareStack.use(getRetryPlugin(this.config));\n        this.middlewareStack.use(getContentLengthPlugin(this.config));\n        this.middlewareStack.use(getHostHeaderPlugin(this.config));\n        this.middlewareStack.use(getLoggerPlugin(this.config));\n        this.middlewareStack.use(getRecursionDetectionPlugin(this.config));\n        this.middlewareStack.use(getHttpAuthSchemeEndpointRuleSetPlugin(this.config, {\n            httpAuthSchemeParametersProvider: defaultSTSHttpAuthSchemeParametersProvider,\n            identityProviderConfigProvider: async (config) => new DefaultIdentityProviderConfig({\n                \"aws.auth#sigv4\": config.credentials,\n            }),\n        }));\n        this.middlewareStack.use(getHttpSigningPlugin(this.config));\n    }\n    destroy() {\n        super.destroy();\n    }\n}\n","import packageInfo from \"../../../package.json\";\nimport { AwsSdkSigV4Signer, NODE_AUTH_SCHEME_PREFERENCE_OPTIONS, emitWarningIfUnsupportedVersion as awsCheckVersion, } from \"@aws-sdk/core\";\nimport { NODE_APP_ID_CONFIG_OPTIONS, createDefaultUserAgentProvider } from \"@aws-sdk/util-user-agent-node\";\nimport { NODE_REGION_CONFIG_FILE_OPTIONS, NODE_REGION_CONFIG_OPTIONS, NODE_USE_DUALSTACK_ENDPOINT_CONFIG_OPTIONS, NODE_USE_FIPS_ENDPOINT_CONFIG_OPTIONS, } from \"@smithy/config-resolver\";\nimport { NoAuthSigner } from \"@smithy/core\";\nimport { Hash } from \"@smithy/hash-node\";\nimport { NODE_MAX_ATTEMPT_CONFIG_OPTIONS, NODE_RETRY_MODE_CONFIG_OPTIONS } from \"@smithy/middleware-retry\";\nimport { loadConfig as loadNodeConfig } from \"@smithy/node-config-provider\";\nimport { NodeHttpHandler as RequestHandler, streamCollector } from \"@smithy/node-http-handler\";\nimport { calculateBodyLength } from \"@smithy/util-body-length-node\";\nimport { DEFAULT_RETRY_MODE } from \"@smithy/util-retry\";\nimport { getRuntimeConfig as getSharedRuntimeConfig } from \"./runtimeConfig.shared\";\nimport { loadConfigsForDefaultMode } from \"@smithy/smithy-client\";\nimport { resolveDefaultsModeConfig } from \"@smithy/util-defaults-mode-node\";\nimport { emitWarningIfUnsupportedVersion } from \"@smithy/smithy-client\";\nexport const getRuntimeConfig = (config) => {\n    emitWarningIfUnsupportedVersion(process.version);\n    const defaultsMode = resolveDefaultsModeConfig(config);\n    const defaultConfigProvider = () => defaultsMode().then(loadConfigsForDefaultMode);\n    const clientSharedValues = getSharedRuntimeConfig(config);\n    awsCheckVersion(process.version);\n    const loaderConfig = {\n        profile: config?.profile,\n        logger: clientSharedValues.logger,\n    };\n    return {\n        ...clientSharedValues,\n        ...config,\n        runtime: \"node\",\n        defaultsMode,\n        authSchemePreference: config?.authSchemePreference ?? loadNodeConfig(NODE_AUTH_SCHEME_PREFERENCE_OPTIONS, loaderConfig),\n        bodyLengthChecker: config?.bodyLengthChecker ?? calculateBodyLength,\n        defaultUserAgentProvider: config?.defaultUserAgentProvider ??\n            createDefaultUserAgentProvider({ serviceId: clientSharedValues.serviceId, clientVersion: packageInfo.version }),\n        httpAuthSchemes: config?.httpAuthSchemes ?? [\n            {\n                schemeId: \"aws.auth#sigv4\",\n                identityProvider: (ipc) => ipc.getIdentityProvider(\"aws.auth#sigv4\") ||\n                    (async (idProps) => await config.credentialDefaultProvider(idProps?.__config || {})()),\n                signer: new AwsSdkSigV4Signer(),\n            },\n            {\n                schemeId: \"smithy.api#noAuth\",\n                identityProvider: (ipc) => ipc.getIdentityProvider(\"smithy.api#noAuth\") || (async () => ({})),\n                signer: new NoAuthSigner(),\n            },\n        ],\n        maxAttempts: config?.maxAttempts ?? loadNodeConfig(NODE_MAX_ATTEMPT_CONFIG_OPTIONS, config),\n        region: config?.region ??\n            loadNodeConfig(NODE_REGION_CONFIG_OPTIONS, { ...NODE_REGION_CONFIG_FILE_OPTIONS, ...loaderConfig }),\n        requestHandler: RequestHandler.create(config?.requestHandler ?? defaultConfigProvider),\n        retryMode: config?.retryMode ??\n            loadNodeConfig({\n                ...NODE_RETRY_MODE_CONFIG_OPTIONS,\n                default: async () => (await defaultConfigProvider()).retryMode || DEFAULT_RETRY_MODE,\n            }, config),\n        sha256: config?.sha256 ?? Hash.bind(null, \"sha256\"),\n        streamCollector: config?.streamCollector ?? streamCollector,\n        useDualstackEndpoint: config?.useDualstackEndpoint ?? loadNodeConfig(NODE_USE_DUALSTACK_ENDPOINT_CONFIG_OPTIONS, loaderConfig),\n        useFipsEndpoint: config?.useFipsEndpoint ?? loadNodeConfig(NODE_USE_FIPS_ENDPOINT_CONFIG_OPTIONS, loaderConfig),\n        userAgentAppId: config?.userAgentAppId ?? loadNodeConfig(NODE_APP_ID_CONFIG_OPTIONS, loaderConfig),\n    };\n};\n","import { AwsSdkSigV4Signer } from \"@aws-sdk/core\";\nimport { NoAuthSigner } from \"@smithy/core\";\nimport { NoOpLogger } from \"@smithy/smithy-client\";\nimport { parseUrl } from \"@smithy/url-parser\";\nimport { fromBase64, toBase64 } from \"@smithy/util-base64\";\nimport { fromUtf8, toUtf8 } from \"@smithy/util-utf8\";\nimport { defaultSTSHttpAuthSchemeProvider } from \"./auth/httpAuthSchemeProvider\";\nimport { defaultEndpointResolver } from \"./endpoint/endpointResolver\";\nexport const getRuntimeConfig = (config) => {\n    return {\n        apiVersion: \"2011-06-15\",\n        base64Decoder: config?.base64Decoder ?? fromBase64,\n        base64Encoder: config?.base64Encoder ?? toBase64,\n        disableHostPrefix: config?.disableHostPrefix ?? false,\n        endpointProvider: config?.endpointProvider ?? defaultEndpointResolver,\n        extensions: config?.extensions ?? [],\n        httpAuthSchemeProvider: config?.httpAuthSchemeProvider ?? defaultSTSHttpAuthSchemeProvider,\n        httpAuthSchemes: config?.httpAuthSchemes ?? [\n            {\n                schemeId: \"aws.auth#sigv4\",\n                identityProvider: (ipc) => ipc.getIdentityProvider(\"aws.auth#sigv4\"),\n                signer: new AwsSdkSigV4Signer(),\n            },\n            {\n                schemeId: \"smithy.api#noAuth\",\n                identityProvider: (ipc) => ipc.getIdentityProvider(\"smithy.api#noAuth\") || (async () => ({})),\n                signer: new NoAuthSigner(),\n            },\n        ],\n        logger: config?.logger ?? new NoOpLogger(),\n        serviceId: config?.serviceId ?? \"STS\",\n        urlParser: config?.urlParser ?? parseUrl,\n        utf8Decoder: config?.utf8Decoder ?? fromUtf8,\n        utf8Encoder: config?.utf8Encoder ?? toUtf8,\n    };\n};\n","import { getAwsRegionExtensionConfiguration, resolveAwsRegionExtensionConfiguration, } from \"@aws-sdk/region-config-resolver\";\nimport { getHttpHandlerExtensionConfiguration, resolveHttpHandlerRuntimeConfig } from \"@smithy/protocol-http\";\nimport { getDefaultExtensionConfiguration, resolveDefaultRuntimeConfig } from \"@smithy/smithy-client\";\nimport { getHttpAuthExtensionConfiguration, resolveHttpAuthRuntimeConfig } from \"./auth/httpAuthExtensionConfiguration\";\nexport const resolveRuntimeExtensions = (runtimeConfig, extensions) => {\n    const extensionConfiguration = Object.assign(getAwsRegionExtensionConfiguration(runtimeConfig), getDefaultExtensionConfiguration(runtimeConfig), getHttpHandlerExtensionConfiguration(runtimeConfig), getHttpAuthExtensionConfiguration(runtimeConfig));\n    extensions.forEach((extension) => extension.configure(extensionConfiguration));\n    return Object.assign(runtimeConfig, resolveAwsRegionExtensionConfiguration(extensionConfiguration), resolveDefaultRuntimeConfig(extensionConfiguration), resolveHttpHandlerRuntimeConfig(extensionConfiguration), resolveHttpAuthRuntimeConfig(extensionConfiguration));\n};\n","export const getHttpAuthExtensionConfiguration = (runtimeConfig) => {\n    const _httpAuthSchemes = runtimeConfig.httpAuthSchemes;\n    let _httpAuthSchemeProvider = runtimeConfig.httpAuthSchemeProvider;\n    let _credentials = runtimeConfig.credentials;\n    return {\n        setHttpAuthScheme(httpAuthScheme) {\n            const index = _httpAuthSchemes.findIndex((scheme) => scheme.schemeId === httpAuthScheme.schemeId);\n            if (index === -1) {\n                _httpAuthSchemes.push(httpAuthScheme);\n            }\n            else {\n                _httpAuthSchemes.splice(index, 1, httpAuthScheme);\n            }\n        },\n        httpAuthSchemes() {\n            return _httpAuthSchemes;\n        },\n        setHttpAuthSchemeProvider(httpAuthSchemeProvider) {\n            _httpAuthSchemeProvider = httpAuthSchemeProvider;\n        },\n        httpAuthSchemeProvider() {\n            return _httpAuthSchemeProvider;\n        },\n        setCredentials(credentials) {\n            _credentials = credentials;\n        },\n        credentials() {\n            return _credentials;\n        },\n    };\n};\nexport const resolveHttpAuthRuntimeConfig = (config) => {\n    return {\n        httpAuthSchemes: config.httpAuthSchemes(),\n        httpAuthSchemeProvider: config.httpAuthSchemeProvider(),\n        credentials: config.credentials(),\n    };\n};\n","import { ServiceException as __ServiceException, } from \"@smithy/smithy-client\";\nexport { __ServiceException };\nexport class STSServiceException extends __ServiceException {\n    constructor(options) {\n        super(options);\n        Object.setPrototypeOf(this, STSServiceException.prototype);\n    }\n}\n","import { SENSITIVE_STRING } from \"@smithy/smithy-client\";\nimport { STSServiceException as __BaseException } from \"./STSServiceException\";\nexport const CredentialsFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.SecretAccessKey && { SecretAccessKey: SENSITIVE_STRING }),\n});\nexport const AssumeRoleResponseFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.Credentials && { Credentials: CredentialsFilterSensitiveLog(obj.Credentials) }),\n});\nexport class ExpiredTokenException extends __BaseException {\n    name = \"ExpiredTokenException\";\n    $fault = \"client\";\n    constructor(opts) {\n        super({\n            name: \"ExpiredTokenException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        Object.setPrototypeOf(this, ExpiredTokenException.prototype);\n    }\n}\nexport class MalformedPolicyDocumentException extends __BaseException {\n    name = \"MalformedPolicyDocumentException\";\n    $fault = \"client\";\n    constructor(opts) {\n        super({\n            name: \"MalformedPolicyDocumentException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        Object.setPrototypeOf(this, MalformedPolicyDocumentException.prototype);\n    }\n}\nexport class PackedPolicyTooLargeException extends __BaseException {\n    name = \"PackedPolicyTooLargeException\";\n    $fault = \"client\";\n    constructor(opts) {\n        super({\n            name: \"PackedPolicyTooLargeException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        Object.setPrototypeOf(this, PackedPolicyTooLargeException.prototype);\n    }\n}\nexport class RegionDisabledException extends __BaseException {\n    name = \"RegionDisabledException\";\n    $fault = \"client\";\n    constructor(opts) {\n        super({\n            name: \"RegionDisabledException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        Object.setPrototypeOf(this, RegionDisabledException.prototype);\n    }\n}\nexport class IDPRejectedClaimException extends __BaseException {\n    name = \"IDPRejectedClaimException\";\n    $fault = \"client\";\n    constructor(opts) {\n        super({\n            name: \"IDPRejectedClaimException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        Object.setPrototypeOf(this, IDPRejectedClaimException.prototype);\n    }\n}\nexport class InvalidIdentityTokenException extends __BaseException {\n    name = \"InvalidIdentityTokenException\";\n    $fault = \"client\";\n    constructor(opts) {\n        super({\n            name: \"InvalidIdentityTokenException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        Object.setPrototypeOf(this, InvalidIdentityTokenException.prototype);\n    }\n}\nexport const AssumeRoleWithWebIdentityRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.WebIdentityToken && { WebIdentityToken: SENSITIVE_STRING }),\n});\nexport const AssumeRoleWithWebIdentityResponseFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.Credentials && { Credentials: CredentialsFilterSensitiveLog(obj.Credentials) }),\n});\nexport class IDPCommunicationErrorException extends __BaseException {\n    name = \"IDPCommunicationErrorException\";\n    $fault = \"client\";\n    constructor(opts) {\n        super({\n            name: \"IDPCommunicationErrorException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        Object.setPrototypeOf(this, IDPCommunicationErrorException.prototype);\n    }\n}\n","import { parseXmlBody as parseBody, parseXmlErrorBody as parseErrorBody } from \"@aws-sdk/core\";\nimport { HttpRequest as __HttpRequest } from \"@smithy/protocol-http\";\nimport { collectBody, decorateServiceException as __decorateServiceException, expectNonNull as __expectNonNull, expectString as __expectString, extendedEncodeURIComponent as __extendedEncodeURIComponent, parseRfc3339DateTimeWithOffset as __parseRfc3339DateTimeWithOffset, strictParseInt32 as __strictParseInt32, withBaseException, } from \"@smithy/smithy-client\";\nimport { ExpiredTokenException, IDPCommunicationErrorException, IDPRejectedClaimException, InvalidIdentityTokenException, MalformedPolicyDocumentException, PackedPolicyTooLargeException, RegionDisabledException, } from \"../models/models_0\";\nimport { STSServiceException as __BaseException } from \"../models/STSServiceException\";\nexport const se_AssumeRoleCommand = async (input, context) => {\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_AssumeRoleRequest(input, context),\n        [_A]: _AR,\n        [_V]: _,\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_AssumeRoleWithWebIdentityCommand = async (input, context) => {\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_AssumeRoleWithWebIdentityRequest(input, context),\n        [_A]: _ARWWI,\n        [_V]: _,\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const de_AssumeRoleCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_AssumeRoleResponse(data.AssumeRoleResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nexport const de_AssumeRoleWithWebIdentityCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_AssumeRoleWithWebIdentityResponse(data.AssumeRoleWithWebIdentityResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_CommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"ExpiredTokenException\":\n        case \"com.amazonaws.sts#ExpiredTokenException\":\n            throw await de_ExpiredTokenExceptionRes(parsedOutput, context);\n        case \"MalformedPolicyDocument\":\n        case \"com.amazonaws.sts#MalformedPolicyDocumentException\":\n            throw await de_MalformedPolicyDocumentExceptionRes(parsedOutput, context);\n        case \"PackedPolicyTooLarge\":\n        case \"com.amazonaws.sts#PackedPolicyTooLargeException\":\n            throw await de_PackedPolicyTooLargeExceptionRes(parsedOutput, context);\n        case \"RegionDisabledException\":\n        case \"com.amazonaws.sts#RegionDisabledException\":\n            throw await de_RegionDisabledExceptionRes(parsedOutput, context);\n        case \"IDPCommunicationError\":\n        case \"com.amazonaws.sts#IDPCommunicationErrorException\":\n            throw await de_IDPCommunicationErrorExceptionRes(parsedOutput, context);\n        case \"IDPRejectedClaim\":\n        case \"com.amazonaws.sts#IDPRejectedClaimException\":\n            throw await de_IDPRejectedClaimExceptionRes(parsedOutput, context);\n        case \"InvalidIdentityToken\":\n        case \"com.amazonaws.sts#InvalidIdentityTokenException\":\n            throw await de_InvalidIdentityTokenExceptionRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody: parsedBody.Error,\n                errorCode,\n            });\n    }\n};\nconst de_ExpiredTokenExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = de_ExpiredTokenException(body.Error, context);\n    const exception = new ExpiredTokenException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_IDPCommunicationErrorExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = de_IDPCommunicationErrorException(body.Error, context);\n    const exception = new IDPCommunicationErrorException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_IDPRejectedClaimExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = de_IDPRejectedClaimException(body.Error, context);\n    const exception = new IDPRejectedClaimException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_InvalidIdentityTokenExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = de_InvalidIdentityTokenException(body.Error, context);\n    const exception = new InvalidIdentityTokenException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_MalformedPolicyDocumentExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = de_MalformedPolicyDocumentException(body.Error, context);\n    const exception = new MalformedPolicyDocumentException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_PackedPolicyTooLargeExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = de_PackedPolicyTooLargeException(body.Error, context);\n    const exception = new PackedPolicyTooLargeException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_RegionDisabledExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = de_RegionDisabledException(body.Error, context);\n    const exception = new RegionDisabledException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst se_AssumeRoleRequest = (input, context) => {\n    const entries = {};\n    if (input[_RA] != null) {\n        entries[_RA] = input[_RA];\n    }\n    if (input[_RSN] != null) {\n        entries[_RSN] = input[_RSN];\n    }\n    if (input[_PA] != null) {\n        const memberEntries = se_policyDescriptorListType(input[_PA], context);\n        if (input[_PA]?.length === 0) {\n            entries.PolicyArns = [];\n        }\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `PolicyArns.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input[_P] != null) {\n        entries[_P] = input[_P];\n    }\n    if (input[_DS] != null) {\n        entries[_DS] = input[_DS];\n    }\n    if (input[_T] != null) {\n        const memberEntries = se_tagListType(input[_T], context);\n        if (input[_T]?.length === 0) {\n            entries.Tags = [];\n        }\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `Tags.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input[_TTK] != null) {\n        const memberEntries = se_tagKeyListType(input[_TTK], context);\n        if (input[_TTK]?.length === 0) {\n            entries.TransitiveTagKeys = [];\n        }\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `TransitiveTagKeys.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input[_EI] != null) {\n        entries[_EI] = input[_EI];\n    }\n    if (input[_SN] != null) {\n        entries[_SN] = input[_SN];\n    }\n    if (input[_TC] != null) {\n        entries[_TC] = input[_TC];\n    }\n    if (input[_SI] != null) {\n        entries[_SI] = input[_SI];\n    }\n    if (input[_PC] != null) {\n        const memberEntries = se_ProvidedContextsListType(input[_PC], context);\n        if (input[_PC]?.length === 0) {\n            entries.ProvidedContexts = [];\n        }\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `ProvidedContexts.${key}`;\n            entries[loc] = value;\n        });\n    }\n    return entries;\n};\nconst se_AssumeRoleWithWebIdentityRequest = (input, context) => {\n    const entries = {};\n    if (input[_RA] != null) {\n        entries[_RA] = input[_RA];\n    }\n    if (input[_RSN] != null) {\n        entries[_RSN] = input[_RSN];\n    }\n    if (input[_WIT] != null) {\n        entries[_WIT] = input[_WIT];\n    }\n    if (input[_PI] != null) {\n        entries[_PI] = input[_PI];\n    }\n    if (input[_PA] != null) {\n        const memberEntries = se_policyDescriptorListType(input[_PA], context);\n        if (input[_PA]?.length === 0) {\n            entries.PolicyArns = [];\n        }\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `PolicyArns.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input[_P] != null) {\n        entries[_P] = input[_P];\n    }\n    if (input[_DS] != null) {\n        entries[_DS] = input[_DS];\n    }\n    return entries;\n};\nconst se_policyDescriptorListType = (input, context) => {\n    const entries = {};\n    let counter = 1;\n    for (const entry of input) {\n        if (entry === null) {\n            continue;\n        }\n        const memberEntries = se_PolicyDescriptorType(entry, context);\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            entries[`member.${counter}.${key}`] = value;\n        });\n        counter++;\n    }\n    return entries;\n};\nconst se_PolicyDescriptorType = (input, context) => {\n    const entries = {};\n    if (input[_a] != null) {\n        entries[_a] = input[_a];\n    }\n    return entries;\n};\nconst se_ProvidedContext = (input, context) => {\n    const entries = {};\n    if (input[_PAr] != null) {\n        entries[_PAr] = input[_PAr];\n    }\n    if (input[_CA] != null) {\n        entries[_CA] = input[_CA];\n    }\n    return entries;\n};\nconst se_ProvidedContextsListType = (input, context) => {\n    const entries = {};\n    let counter = 1;\n    for (const entry of input) {\n        if (entry === null) {\n            continue;\n        }\n        const memberEntries = se_ProvidedContext(entry, context);\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            entries[`member.${counter}.${key}`] = value;\n        });\n        counter++;\n    }\n    return entries;\n};\nconst se_Tag = (input, context) => {\n    const entries = {};\n    if (input[_K] != null) {\n        entries[_K] = input[_K];\n    }\n    if (input[_Va] != null) {\n        entries[_Va] = input[_Va];\n    }\n    return entries;\n};\nconst se_tagKeyListType = (input, context) => {\n    const entries = {};\n    let counter = 1;\n    for (const entry of input) {\n        if (entry === null) {\n            continue;\n        }\n        entries[`member.${counter}`] = entry;\n        counter++;\n    }\n    return entries;\n};\nconst se_tagListType = (input, context) => {\n    const entries = {};\n    let counter = 1;\n    for (const entry of input) {\n        if (entry === null) {\n            continue;\n        }\n        const memberEntries = se_Tag(entry, context);\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            entries[`member.${counter}.${key}`] = value;\n        });\n        counter++;\n    }\n    return entries;\n};\nconst de_AssumedRoleUser = (output, context) => {\n    const contents = {};\n    if (output[_ARI] != null) {\n        contents[_ARI] = __expectString(output[_ARI]);\n    }\n    if (output[_Ar] != null) {\n        contents[_Ar] = __expectString(output[_Ar]);\n    }\n    return contents;\n};\nconst de_AssumeRoleResponse = (output, context) => {\n    const contents = {};\n    if (output[_C] != null) {\n        contents[_C] = de_Credentials(output[_C], context);\n    }\n    if (output[_ARU] != null) {\n        contents[_ARU] = de_AssumedRoleUser(output[_ARU], context);\n    }\n    if (output[_PPS] != null) {\n        contents[_PPS] = __strictParseInt32(output[_PPS]);\n    }\n    if (output[_SI] != null) {\n        contents[_SI] = __expectString(output[_SI]);\n    }\n    return contents;\n};\nconst de_AssumeRoleWithWebIdentityResponse = (output, context) => {\n    const contents = {};\n    if (output[_C] != null) {\n        contents[_C] = de_Credentials(output[_C], context);\n    }\n    if (output[_SFWIT] != null) {\n        contents[_SFWIT] = __expectString(output[_SFWIT]);\n    }\n    if (output[_ARU] != null) {\n        contents[_ARU] = de_AssumedRoleUser(output[_ARU], context);\n    }\n    if (output[_PPS] != null) {\n        contents[_PPS] = __strictParseInt32(output[_PPS]);\n    }\n    if (output[_Pr] != null) {\n        contents[_Pr] = __expectString(output[_Pr]);\n    }\n    if (output[_Au] != null) {\n        contents[_Au] = __expectString(output[_Au]);\n    }\n    if (output[_SI] != null) {\n        contents[_SI] = __expectString(output[_SI]);\n    }\n    return contents;\n};\nconst de_Credentials = (output, context) => {\n    const contents = {};\n    if (output[_AKI] != null) {\n        contents[_AKI] = __expectString(output[_AKI]);\n    }\n    if (output[_SAK] != null) {\n        contents[_SAK] = __expectString(output[_SAK]);\n    }\n    if (output[_ST] != null) {\n        contents[_ST] = __expectString(output[_ST]);\n    }\n    if (output[_E] != null) {\n        contents[_E] = __expectNonNull(__parseRfc3339DateTimeWithOffset(output[_E]));\n    }\n    return contents;\n};\nconst de_ExpiredTokenException = (output, context) => {\n    const contents = {};\n    if (output[_m] != null) {\n        contents[_m] = __expectString(output[_m]);\n    }\n    return contents;\n};\nconst de_IDPCommunicationErrorException = (output, context) => {\n    const contents = {};\n    if (output[_m] != null) {\n        contents[_m] = __expectString(output[_m]);\n    }\n    return contents;\n};\nconst de_IDPRejectedClaimException = (output, context) => {\n    const contents = {};\n    if (output[_m] != null) {\n        contents[_m] = __expectString(output[_m]);\n    }\n    return contents;\n};\nconst de_InvalidIdentityTokenException = (output, context) => {\n    const contents = {};\n    if (output[_m] != null) {\n        contents[_m] = __expectString(output[_m]);\n    }\n    return contents;\n};\nconst de_MalformedPolicyDocumentException = (output, context) => {\n    const contents = {};\n    if (output[_m] != null) {\n        contents[_m] = __expectString(output[_m]);\n    }\n    return contents;\n};\nconst de_PackedPolicyTooLargeException = (output, context) => {\n    const contents = {};\n    if (output[_m] != null) {\n        contents[_m] = __expectString(output[_m]);\n    }\n    return contents;\n};\nconst de_RegionDisabledException = (output, context) => {\n    const contents = {};\n    if (output[_m] != null) {\n        contents[_m] = __expectString(output[_m]);\n    }\n    return contents;\n};\nconst deserializeMetadata = (output) => ({\n    httpStatusCode: output.statusCode,\n    requestId: output.headers[\"x-amzn-requestid\"] ?? output.headers[\"x-amzn-request-id\"] ?? output.headers[\"x-amz-request-id\"],\n    extendedRequestId: output.headers[\"x-amz-id-2\"],\n    cfId: output.headers[\"x-amz-cf-id\"],\n});\nconst collectBodyString = (streamBody, context) => collectBody(streamBody, context).then((body) => context.utf8Encoder(body));\nconst throwDefaultError = withBaseException(__BaseException);\nconst buildHttpRpcRequest = async (context, headers, path, resolvedHostname, body) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const contents = {\n        protocol,\n        hostname,\n        port,\n        method: \"POST\",\n        path: basePath.endsWith(\"/\") ? basePath.slice(0, -1) + path : basePath + path,\n        headers,\n    };\n    if (resolvedHostname !== undefined) {\n        contents.hostname = resolvedHostname;\n    }\n    if (body !== undefined) {\n        contents.body = body;\n    }\n    return new __HttpRequest(contents);\n};\nconst SHARED_HEADERS = {\n    \"content-type\": \"application/x-www-form-urlencoded\",\n};\nconst _ = \"2011-06-15\";\nconst _A = \"Action\";\nconst _AKI = \"AccessKeyId\";\nconst _AR = \"AssumeRole\";\nconst _ARI = \"AssumedRoleId\";\nconst _ARU = \"AssumedRoleUser\";\nconst _ARWWI = \"AssumeRoleWithWebIdentity\";\nconst _Ar = \"Arn\";\nconst _Au = \"Audience\";\nconst _C = \"Credentials\";\nconst _CA = \"ContextAssertion\";\nconst _DS = \"DurationSeconds\";\nconst _E = \"Expiration\";\nconst _EI = \"ExternalId\";\nconst _K = \"Key\";\nconst _P = \"Policy\";\nconst _PA = \"PolicyArns\";\nconst _PAr = \"ProviderArn\";\nconst _PC = \"ProvidedContexts\";\nconst _PI = \"ProviderId\";\nconst _PPS = \"PackedPolicySize\";\nconst _Pr = \"Provider\";\nconst _RA = \"RoleArn\";\nconst _RSN = \"RoleSessionName\";\nconst _SAK = \"SecretAccessKey\";\nconst _SFWIT = \"SubjectFromWebIdentityToken\";\nconst _SI = \"SourceIdentity\";\nconst _SN = \"SerialNumber\";\nconst _ST = \"SessionToken\";\nconst _T = \"Tags\";\nconst _TC = \"TokenCode\";\nconst _TTK = \"TransitiveTagKeys\";\nconst _V = \"Version\";\nconst _Va = \"Value\";\nconst _WIT = \"WebIdentityToken\";\nconst _a = \"arn\";\nconst _m = \"message\";\nconst buildFormUrlencodedString = (formEntries) => Object.entries(formEntries)\n    .map(([key, value]) => __extendedEncodeURIComponent(key) + \"=\" + __extendedEncodeURIComponent(value))\n    .join(\"&\");\nconst loadQueryErrorCode = (output, data) => {\n    if (data.Error?.Code !== undefined) {\n        return data.Error.Code;\n    }\n    if (output.statusCode == 404) {\n        return \"NotFound\";\n    }\n};\n","import { getEndpointPlugin } from \"@smithy/middleware-endpoint\";\nimport { getSerdePlugin } from \"@smithy/middleware-serde\";\nimport { Command as $Command } from \"@smithy/smithy-client\";\nimport { commonParams } from \"../endpoint/EndpointParameters\";\nimport { AssumeRoleResponseFilterSensitiveLog } from \"../models/models_0\";\nimport { de_AssumeRoleCommand, se_AssumeRoleCommand } from \"../protocols/Aws_query\";\nexport { $Command };\nexport class AssumeRoleCommand extends $Command\n    .classBuilder()\n    .ep(commonParams)\n    .m(function (Command, cs, config, o) {\n    return [\n        getSerdePlugin(config, this.serialize, this.deserialize),\n        getEndpointPlugin(config, Command.getEndpointParameterInstructions()),\n    ];\n})\n    .s(\"AWSSecurityTokenServiceV20110615\", \"AssumeRole\", {})\n    .n(\"STSClient\", \"AssumeRoleCommand\")\n    .f(void 0, AssumeRoleResponseFilterSensitiveLog)\n    .ser(se_AssumeRoleCommand)\n    .de(de_AssumeRoleCommand)\n    .build() {\n}\n","import { getEndpointPlugin } from \"@smithy/middleware-endpoint\";\nimport { getSerdePlugin } from \"@smithy/middleware-serde\";\nimport { Command as $Command } from \"@smithy/smithy-client\";\nimport { commonParams } from \"../endpoint/EndpointParameters\";\nimport { AssumeRoleWithWebIdentityRequestFilterSensitiveLog, AssumeRoleWithWebIdentityResponseFilterSensitiveLog, } from \"../models/models_0\";\nimport { de_AssumeRoleWithWebIdentityCommand, se_AssumeRoleWithWebIdentityCommand } from \"../protocols/Aws_query\";\nexport { $Command };\nexport class AssumeRoleWithWebIdentityCommand extends $Command\n    .classBuilder()\n    .ep(commonParams)\n    .m(function (Command, cs, config, o) {\n    return [\n        getSerdePlugin(config, this.serialize, this.deserialize),\n        getEndpointPlugin(config, Command.getEndpointParameterInstructions()),\n    ];\n})\n    .s(\"AWSSecurityTokenServiceV20110615\", \"AssumeRoleWithWebIdentity\", {})\n    .n(\"STSClient\", \"AssumeRoleWithWebIdentityCommand\")\n    .f(AssumeRoleWithWebIdentityRequestFilterSensitiveLog, AssumeRoleWithWebIdentityResponseFilterSensitiveLog)\n    .ser(se_AssumeRoleWithWebIdentityCommand)\n    .de(de_AssumeRoleWithWebIdentityCommand)\n    .build() {\n}\n","import { createAggregatedClient } from \"@smithy/smithy-client\";\nimport { AssumeRoleCommand } from \"./commands/AssumeRoleCommand\";\nimport { AssumeRoleWithWebIdentityCommand, } from \"./commands/AssumeRoleWithWebIdentityCommand\";\nimport { STSClient } from \"./STSClient\";\nconst commands = {\n    AssumeRoleCommand,\n    AssumeRoleWithWebIdentityCommand,\n};\nexport class STS extends STSClient {\n}\ncreateAggregatedClient(commands, STS);\n","import { setCredentialFeature } from \"@aws-sdk/core/client\";\nimport { AssumeRoleCommand } from \"./commands/AssumeRoleCommand\";\nimport { AssumeRoleWithWebIdentityCommand, } from \"./commands/AssumeRoleWithWebIdentityCommand\";\nconst ASSUME_ROLE_DEFAULT_REGION = \"us-east-1\";\nconst getAccountIdFromAssumedRoleUser = (assumedRoleUser) => {\n    if (typeof assumedRoleUser?.Arn === \"string\") {\n        const arnComponents = assumedRoleUser.Arn.split(\":\");\n        if (arnComponents.length > 4 && arnComponents[4] !== \"\") {\n            return arnComponents[4];\n        }\n    }\n    return undefined;\n};\nconst resolveRegion = async (_region, _parentRegion, credentialProviderLogger) => {\n    const region = typeof _region === \"function\" ? await _region() : _region;\n    const parentRegion = typeof _parentRegion === \"function\" ? await _parentRegion() : _parentRegion;\n    credentialProviderLogger?.debug?.(\"@aws-sdk/client-sts::resolveRegion\", \"accepting first of:\", `${region} (provider)`, `${parentRegion} (parent client)`, `${ASSUME_ROLE_DEFAULT_REGION} (STS default)`);\n    return region ?? parentRegion ?? ASSUME_ROLE_DEFAULT_REGION;\n};\nexport const getDefaultRoleAssumer = (stsOptions, STSClient) => {\n    let stsClient;\n    let closureSourceCreds;\n    return async (sourceCreds, params) => {\n        closureSourceCreds = sourceCreds;\n        if (!stsClient) {\n            const { logger = stsOptions?.parentClientConfig?.logger, region, requestHandler = stsOptions?.parentClientConfig?.requestHandler, credentialProviderLogger, } = stsOptions;\n            const resolvedRegion = await resolveRegion(region, stsOptions?.parentClientConfig?.region, credentialProviderLogger);\n            const isCompatibleRequestHandler = !isH2(requestHandler);\n            stsClient = new STSClient({\n                profile: stsOptions?.parentClientConfig?.profile,\n                credentialDefaultProvider: () => async () => closureSourceCreds,\n                region: resolvedRegion,\n                requestHandler: isCompatibleRequestHandler ? requestHandler : undefined,\n                logger: logger,\n            });\n        }\n        const { Credentials, AssumedRoleUser } = await stsClient.send(new AssumeRoleCommand(params));\n        if (!Credentials || !Credentials.AccessKeyId || !Credentials.SecretAccessKey) {\n            throw new Error(`Invalid response from STS.assumeRole call with role ${params.RoleArn}`);\n        }\n        const accountId = getAccountIdFromAssumedRoleUser(AssumedRoleUser);\n        const credentials = {\n            accessKeyId: Credentials.AccessKeyId,\n            secretAccessKey: Credentials.SecretAccessKey,\n            sessionToken: Credentials.SessionToken,\n            expiration: Credentials.Expiration,\n            ...(Credentials.CredentialScope && { credentialScope: Credentials.CredentialScope }),\n            ...(accountId && { accountId }),\n        };\n        setCredentialFeature(credentials, \"CREDENTIALS_STS_ASSUME_ROLE\", \"i\");\n        return credentials;\n    };\n};\nexport const getDefaultRoleAssumerWithWebIdentity = (stsOptions, STSClient) => {\n    let stsClient;\n    return async (params) => {\n        if (!stsClient) {\n            const { logger = stsOptions?.parentClientConfig?.logger, region, requestHandler = stsOptions?.parentClientConfig?.requestHandler, credentialProviderLogger, } = stsOptions;\n            const resolvedRegion = await resolveRegion(region, stsOptions?.parentClientConfig?.region, credentialProviderLogger);\n            const isCompatibleRequestHandler = !isH2(requestHandler);\n            stsClient = new STSClient({\n                profile: stsOptions?.parentClientConfig?.profile,\n                region: resolvedRegion,\n                requestHandler: isCompatibleRequestHandler ? requestHandler : undefined,\n                logger: logger,\n            });\n        }\n        const { Credentials, AssumedRoleUser } = await stsClient.send(new AssumeRoleWithWebIdentityCommand(params));\n        if (!Credentials || !Credentials.AccessKeyId || !Credentials.SecretAccessKey) {\n            throw new Error(`Invalid response from STS.assumeRoleWithWebIdentity call with role ${params.RoleArn}`);\n        }\n        const accountId = getAccountIdFromAssumedRoleUser(AssumedRoleUser);\n        const credentials = {\n            accessKeyId: Credentials.AccessKeyId,\n            secretAccessKey: Credentials.SecretAccessKey,\n            sessionToken: Credentials.SessionToken,\n            expiration: Credentials.Expiration,\n            ...(Credentials.CredentialScope && { credentialScope: Credentials.CredentialScope }),\n            ...(accountId && { accountId }),\n        };\n        if (accountId) {\n            setCredentialFeature(credentials, \"RESOLVED_ACCOUNT_ID\", \"T\");\n        }\n        setCredentialFeature(credentials, \"CREDENTIALS_STS_ASSUME_ROLE_WEB_ID\", \"k\");\n        return credentials;\n    };\n};\nexport const decorateDefaultCredentialProvider = (provider) => (input) => provider({\n    roleAssumer: getDefaultRoleAssumer(input, input.stsClientCtor),\n    roleAssumerWithWebIdentity: getDefaultRoleAssumerWithWebIdentity(input, input.stsClientCtor),\n    ...input,\n});\nconst isH2 = (requestHandler) => {\n    return requestHandler?.metadata?.handlerProtocol === \"h2\";\n};\n","import { getDefaultRoleAssumer as StsGetDefaultRoleAssumer, getDefaultRoleAssumerWithWebIdentity as StsGetDefaultRoleAssumerWithWebIdentity, } from \"./defaultStsRoleAssumers\";\nimport { STSClient } from \"./STSClient\";\nconst getCustomizableStsClientCtor = (baseCtor, customizations) => {\n    if (!customizations)\n        return baseCtor;\n    else\n        return class CustomizableSTSClient extends baseCtor {\n            constructor(config) {\n                super(config);\n                for (const customization of customizations) {\n                    this.middlewareStack.use(customization);\n                }\n            }\n        };\n};\nexport const getDefaultRoleAssumer = (stsOptions = {}, stsPlugins) => StsGetDefaultRoleAssumer(stsOptions, getCustomizableStsClientCtor(STSClient, stsPlugins));\nexport const getDefaultRoleAssumerWithWebIdentity = (stsOptions = {}, stsPlugins) => StsGetDefaultRoleAssumerWithWebIdentity(stsOptions, getCustomizableStsClientCtor(STSClient, stsPlugins));\nexport const decorateDefaultCredentialProvider = (provider) => (input) => provider({\n    roleAssumer: getDefaultRoleAssumer(input),\n    roleAssumerWithWebIdentity: getDefaultRoleAssumerWithWebIdentity(input),\n    ...input,\n});\n"],"names":["defaultSTSHttpAuthSchemeParametersProvider","async","config","context","input","operation","region","Error","defaultSTSHttpAuthSchemeProvider","authParameters","options","push","schemeId","signingProperties","name","propertiesExtractor","createAwsAuthSigv4HttpAuthOption","commonParams","UseGlobalEndpoint","type","UseFIPS","Endpoint","Region","UseDualStack","F","G","H","I","J","a","b","c","d","e","g","h","i","j","k","l","m","n","o","p","q","r","s","t","u","v","w","x","y","z","A","B","C","D","E","ruleSet","version","parameters","rules","conditions","endpoint","url","properties","authSchemes","signingName","signingRegion","headers","error","cache","size","params","defaultEndpointResolver","endpointParams","get","logger","aws","STSClient","constructor","configuration","_config_0","process","defaultsMode","defaultConfigProvider","then","clientSharedValues","apiVersion","base64Decoder","base64Encoder","disableHostPrefix","endpointProvider","extensions","httpAuthSchemeProvider","httpAuthSchemes","identityProvider","ipc","getIdentityProvider","signer","AwsSdkSigV4Signer","serviceId","urlParser","utf8Decoder","utf8Encoder","loaderConfig","profile","runtime","authSchemePreference","NODE_AUTH_SCHEME_PREFERENCE_OPTIONS","bodyLengthChecker","defaultUserAgentProvider","clientVersion","idProps","credentialDefaultProvider","__config","maxAttempts","requestHandler","create","retryMode","default","sha256","bind","streamCollector","useDualstackEndpoint","useFipsEndpoint","userAgentAppId","super","this","initConfig","_config_1","Object","assign","useGlobalEndpoint","defaultSigningName","_config_2","_config_3","_config_4","_config_5","_config_8","runtimeConfig","extensionConfiguration","_httpAuthSchemes","_httpAuthSchemeProvider","_credentials","credentials","setHttpAuthScheme","httpAuthScheme","index","findIndex","scheme","splice","setHttpAuthSchemeProvider","setCredentials","getHttpAuthExtensionConfiguration","forEach","extension","configure","resolveRuntimeExtensions","config_0","stsClientCtor","config_1","resolveAwsSdkSigV4Config","resolveHttpAuthSchemeConfig","middlewareStack","use","httpAuthSchemeParametersProvider","identityProviderConfigProvider","destroy","STSServiceException","setPrototypeOf","prototype","CredentialsFilterSensitiveLog","obj","SecretAccessKey","AssumeRoleResponseFilterSensitiveLog","Credentials","ExpiredTokenException","$fault","opts","MalformedPolicyDocumentException","PackedPolicyTooLargeException","RegionDisabledException","IDPRejectedClaimException","InvalidIdentityTokenException","AssumeRoleWithWebIdentityRequestFilterSensitiveLog","WebIdentityToken","AssumeRoleWithWebIdentityResponseFilterSensitiveLog","IDPCommunicationErrorException","se_AssumeRoleCommand","SHARED_HEADERS","body","buildFormUrlencodedString","se_AssumeRoleRequest","_A","_AR","_V","_","buildHttpRpcRequest","undefined","se_AssumeRoleWithWebIdentityCommand","se_AssumeRoleWithWebIdentityRequest","_ARWWI","de_AssumeRoleCommand","output","statusCode","de_CommandError","data","contents","de_AssumeRoleResponse","AssumeRoleResult","$metadata","deserializeMetadata","de_AssumeRoleWithWebIdentityCommand","de_AssumeRoleWithWebIdentityResponse","AssumeRoleWithWebIdentityResult","parsedOutput","errorCode","loadQueryErrorCode","de_ExpiredTokenExceptionRes","de_MalformedPolicyDocumentExceptionRes","de_PackedPolicyTooLargeExceptionRes","de_RegionDisabledExceptionRes","de_IDPCommunicationErrorExceptionRes","de_IDPRejectedClaimExceptionRes","de_InvalidIdentityTokenExceptionRes","parsedBody","throwDefaultError","deserialized","de_ExpiredTokenException","exception","de_IDPCommunicationErrorException","de_IDPRejectedClaimException","de_InvalidIdentityTokenException","de_MalformedPolicyDocumentException","de_PackedPolicyTooLargeException","de_RegionDisabledException","entries","_RA","_RSN","_PA","memberEntries","se_policyDescriptorListType","length","PolicyArns","key","value","_P","_DS","_T","se_tagListType","Tags","_TTK","se_tagKeyListType","TransitiveTagKeys","_EI","_SN","_TC","_SI","_PC","se_ProvidedContextsListType","ProvidedContexts","_WIT","_PI","counter","entry","se_PolicyDescriptorType","_a","se_ProvidedContext","_PAr","_CA","se_Tag","_K","_Va","de_AssumedRoleUser","_ARI","_Ar","_C","de_Credentials","_ARU","_PPS","_SFWIT","_Pr","_Au","_AKI","_SAK","_ST","_E","_m","httpStatusCode","requestId","extendedRequestId","cfId","path","resolvedHostname","hostname","protocol","port","basePath","method","endsWith","slice","formEntries","map","join","Code","AssumeRoleCommand","classBuilder","ep","Command","cs","serialize","deserialize","getEndpointParameterInstructions","f","ser","de","build","AssumeRoleWithWebIdentityCommand","commands","ASSUME_ROLE_DEFAULT_REGION","getAccountIdFromAssumedRoleUser","assumedRoleUser","Arn","arnComponents","split","resolveRegion","_region","_parentRegion","credentialProviderLogger","parentRegion","debug","isH2","metadata","handlerProtocol","getCustomizableStsClientCtor","baseCtor","customizations","customization","stsOptions","stsPlugins","stsClient","closureSourceCreds","sourceCreds","parentClientConfig","resolvedRegion","isCompatibleRequestHandler","AssumedRoleUser","send","AccessKeyId","RoleArn","accountId","accessKeyId","secretAccessKey","sessionToken","SessionToken","expiration","Expiration","CredentialScope","credentialScope","setCredentialFeature"],"sourceRoot":""}