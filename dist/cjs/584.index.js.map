{"version":3,"file":"584.index.js","mappings":"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","sources":["webpack://arcraft/./node_modules/.pnpm/@aws-sdk+client-sso@3.826.0/node_modules/@aws-sdk/client-sso/dist-es/endpoint/EndpointParameters.js","webpack://arcraft/./node_modules/.pnpm/@aws-sdk+client-sso@3.826.0/node_modules/@aws-sdk/client-sso/dist-es/models/SSOServiceException.js","webpack://arcraft/./node_modules/.pnpm/@aws-sdk+client-sso@3.826.0/node_modules/@aws-sdk/client-sso/dist-es/models/models_0.js","webpack://arcraft/./node_modules/.pnpm/@aws-sdk+client-sso@3.826.0/node_modules/@aws-sdk/client-sso/dist-es/protocols/Aws_restJson1.js","webpack://arcraft/./node_modules/.pnpm/@aws-sdk+client-sso@3.826.0/node_modules/@aws-sdk/client-sso/dist-es/commands/GetRoleCredentialsCommand.js","webpack://arcraft/./node_modules/.pnpm/@aws-sdk+client-sso@3.826.0/node_modules/@aws-sdk/client-sso/dist-es/auth/httpAuthSchemeProvider.js","webpack://arcraft/./node_modules/.pnpm/@aws-sdk+client-sso@3.826.0/node_modules/@aws-sdk/client-sso/dist-es/endpoint/ruleset.js","webpack://arcraft/./node_modules/.pnpm/@aws-sdk+client-sso@3.826.0/node_modules/@aws-sdk/client-sso/dist-es/endpoint/endpointResolver.js","webpack://arcraft/./node_modules/.pnpm/@aws-sdk+client-sso@3.826.0/node_modules/@aws-sdk/client-sso/dist-es/SSOClient.js","webpack://arcraft/./node_modules/.pnpm/@aws-sdk+client-sso@3.826.0/node_modules/@aws-sdk/client-sso/dist-es/runtimeConfig.js","webpack://arcraft/./node_modules/.pnpm/@aws-sdk+client-sso@3.826.0/node_modules/@aws-sdk/client-sso/dist-es/runtimeConfig.shared.js","webpack://arcraft/./node_modules/.pnpm/@aws-sdk+client-sso@3.826.0/node_modules/@aws-sdk/client-sso/dist-es/runtimeExtensions.js","webpack://arcraft/./node_modules/.pnpm/@aws-sdk+client-sso@3.826.0/node_modules/@aws-sdk/client-sso/dist-es/auth/httpAuthExtensionConfiguration.js","webpack://arcraft/./node_modules/.pnpm/@aws-sdk+core@3.826.0/node_modules/@aws-sdk/core/dist-es/submodules/protocols/json/parseJsonBody.js"],"sourcesContent":["export const resolveClientEndpointParameters = (options) => {\n    return Object.assign(options, {\n        useDualstackEndpoint: options.useDualstackEndpoint ?? false,\n        useFipsEndpoint: options.useFipsEndpoint ?? false,\n        defaultSigningName: \"awsssoportal\",\n    });\n};\nexport const commonParams = {\n    UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n    Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n    Region: { type: \"builtInParams\", name: \"region\" },\n    UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n};\n","import { ServiceException as __ServiceException, } from \"@smithy/smithy-client\";\nexport { __ServiceException };\nexport class SSOServiceException extends __ServiceException {\n    constructor(options) {\n        super(options);\n        Object.setPrototypeOf(this, SSOServiceException.prototype);\n    }\n}\n","import { SENSITIVE_STRING } from \"@smithy/smithy-client\";\nimport { SSOServiceException as __BaseException } from \"./SSOServiceException\";\nexport class InvalidRequestException extends __BaseException {\n    name = \"InvalidRequestException\";\n    $fault = \"client\";\n    constructor(opts) {\n        super({\n            name: \"InvalidRequestException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        Object.setPrototypeOf(this, InvalidRequestException.prototype);\n    }\n}\nexport class ResourceNotFoundException extends __BaseException {\n    name = \"ResourceNotFoundException\";\n    $fault = \"client\";\n    constructor(opts) {\n        super({\n            name: \"ResourceNotFoundException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        Object.setPrototypeOf(this, ResourceNotFoundException.prototype);\n    }\n}\nexport class TooManyRequestsException extends __BaseException {\n    name = \"TooManyRequestsException\";\n    $fault = \"client\";\n    constructor(opts) {\n        super({\n            name: \"TooManyRequestsException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        Object.setPrototypeOf(this, TooManyRequestsException.prototype);\n    }\n}\nexport class UnauthorizedException extends __BaseException {\n    name = \"UnauthorizedException\";\n    $fault = \"client\";\n    constructor(opts) {\n        super({\n            name: \"UnauthorizedException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        Object.setPrototypeOf(this, UnauthorizedException.prototype);\n    }\n}\nexport const GetRoleCredentialsRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.accessToken && { accessToken: SENSITIVE_STRING }),\n});\nexport const RoleCredentialsFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.secretAccessKey && { secretAccessKey: SENSITIVE_STRING }),\n    ...(obj.sessionToken && { sessionToken: SENSITIVE_STRING }),\n});\nexport const GetRoleCredentialsResponseFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.roleCredentials && { roleCredentials: RoleCredentialsFilterSensitiveLog(obj.roleCredentials) }),\n});\nexport const ListAccountRolesRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.accessToken && { accessToken: SENSITIVE_STRING }),\n});\nexport const ListAccountsRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.accessToken && { accessToken: SENSITIVE_STRING }),\n});\nexport const LogoutRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.accessToken && { accessToken: SENSITIVE_STRING }),\n});\n","import { loadRestJsonErrorCode, parseJsonBody as parseBody, parseJsonErrorBody as parseErrorBody } from \"@aws-sdk/core\";\nimport { requestBuilder as rb } from \"@smithy/core\";\nimport { _json, collectBody, decorateServiceException as __decorateServiceException, expectNonNull as __expectNonNull, expectObject as __expectObject, expectString as __expectString, isSerializableHeaderValue, map, take, withBaseException, } from \"@smithy/smithy-client\";\nimport { InvalidRequestException, ResourceNotFoundException, TooManyRequestsException, UnauthorizedException, } from \"../models/models_0\";\nimport { SSOServiceException as __BaseException } from \"../models/SSOServiceException\";\nexport const se_GetRoleCredentialsCommand = async (input, context) => {\n    const b = rb(input, context);\n    const headers = map({}, isSerializableHeaderValue, {\n        [_xasbt]: input[_aT],\n    });\n    b.bp(\"/federation/credentials\");\n    const query = map({\n        [_rn]: [, __expectNonNull(input[_rN], `roleName`)],\n        [_ai]: [, __expectNonNull(input[_aI], `accountId`)],\n    });\n    let body;\n    b.m(\"GET\").h(headers).q(query).b(body);\n    return b.build();\n};\nexport const se_ListAccountRolesCommand = async (input, context) => {\n    const b = rb(input, context);\n    const headers = map({}, isSerializableHeaderValue, {\n        [_xasbt]: input[_aT],\n    });\n    b.bp(\"/assignment/roles\");\n    const query = map({\n        [_nt]: [, input[_nT]],\n        [_mr]: [() => input.maxResults !== void 0, () => input[_mR].toString()],\n        [_ai]: [, __expectNonNull(input[_aI], `accountId`)],\n    });\n    let body;\n    b.m(\"GET\").h(headers).q(query).b(body);\n    return b.build();\n};\nexport const se_ListAccountsCommand = async (input, context) => {\n    const b = rb(input, context);\n    const headers = map({}, isSerializableHeaderValue, {\n        [_xasbt]: input[_aT],\n    });\n    b.bp(\"/assignment/accounts\");\n    const query = map({\n        [_nt]: [, input[_nT]],\n        [_mr]: [() => input.maxResults !== void 0, () => input[_mR].toString()],\n    });\n    let body;\n    b.m(\"GET\").h(headers).q(query).b(body);\n    return b.build();\n};\nexport const se_LogoutCommand = async (input, context) => {\n    const b = rb(input, context);\n    const headers = map({}, isSerializableHeaderValue, {\n        [_xasbt]: input[_aT],\n    });\n    b.bp(\"/logout\");\n    let body;\n    b.m(\"POST\").h(headers).b(body);\n    return b.build();\n};\nexport const de_GetRoleCredentialsCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = __expectNonNull(__expectObject(await parseBody(output.body, context)), \"body\");\n    const doc = take(data, {\n        roleCredentials: _json,\n    });\n    Object.assign(contents, doc);\n    return contents;\n};\nexport const de_ListAccountRolesCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = __expectNonNull(__expectObject(await parseBody(output.body, context)), \"body\");\n    const doc = take(data, {\n        nextToken: __expectString,\n        roleList: _json,\n    });\n    Object.assign(contents, doc);\n    return contents;\n};\nexport const de_ListAccountsCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = __expectNonNull(__expectObject(await parseBody(output.body, context)), \"body\");\n    const doc = take(data, {\n        accountList: _json,\n        nextToken: __expectString,\n    });\n    Object.assign(contents, doc);\n    return contents;\n};\nexport const de_LogoutCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    await collectBody(output.body, context);\n    return contents;\n};\nconst de_CommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InvalidRequestException\":\n        case \"com.amazonaws.sso#InvalidRequestException\":\n            throw await de_InvalidRequestExceptionRes(parsedOutput, context);\n        case \"ResourceNotFoundException\":\n        case \"com.amazonaws.sso#ResourceNotFoundException\":\n            throw await de_ResourceNotFoundExceptionRes(parsedOutput, context);\n        case \"TooManyRequestsException\":\n        case \"com.amazonaws.sso#TooManyRequestsException\":\n            throw await de_TooManyRequestsExceptionRes(parsedOutput, context);\n        case \"UnauthorizedException\":\n        case \"com.amazonaws.sso#UnauthorizedException\":\n            throw await de_UnauthorizedExceptionRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nconst throwDefaultError = withBaseException(__BaseException);\nconst de_InvalidRequestExceptionRes = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body;\n    const doc = take(data, {\n        message: __expectString,\n    });\n    Object.assign(contents, doc);\n    const exception = new InvalidRequestException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return __decorateServiceException(exception, parsedOutput.body);\n};\nconst de_ResourceNotFoundExceptionRes = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body;\n    const doc = take(data, {\n        message: __expectString,\n    });\n    Object.assign(contents, doc);\n    const exception = new ResourceNotFoundException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return __decorateServiceException(exception, parsedOutput.body);\n};\nconst de_TooManyRequestsExceptionRes = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body;\n    const doc = take(data, {\n        message: __expectString,\n    });\n    Object.assign(contents, doc);\n    const exception = new TooManyRequestsException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return __decorateServiceException(exception, parsedOutput.body);\n};\nconst de_UnauthorizedExceptionRes = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body;\n    const doc = take(data, {\n        message: __expectString,\n    });\n    Object.assign(contents, doc);\n    const exception = new UnauthorizedException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return __decorateServiceException(exception, parsedOutput.body);\n};\nconst deserializeMetadata = (output) => ({\n    httpStatusCode: output.statusCode,\n    requestId: output.headers[\"x-amzn-requestid\"] ?? output.headers[\"x-amzn-request-id\"] ?? output.headers[\"x-amz-request-id\"],\n    extendedRequestId: output.headers[\"x-amz-id-2\"],\n    cfId: output.headers[\"x-amz-cf-id\"],\n});\nconst collectBodyString = (streamBody, context) => collectBody(streamBody, context).then((body) => context.utf8Encoder(body));\nconst _aI = \"accountId\";\nconst _aT = \"accessToken\";\nconst _ai = \"account_id\";\nconst _mR = \"maxResults\";\nconst _mr = \"max_result\";\nconst _nT = \"nextToken\";\nconst _nt = \"next_token\";\nconst _rN = \"roleName\";\nconst _rn = \"role_name\";\nconst _xasbt = \"x-amz-sso_bearer_token\";\n","import { getEndpointPlugin } from \"@smithy/middleware-endpoint\";\nimport { getSerdePlugin } from \"@smithy/middleware-serde\";\nimport { Command as $Command } from \"@smithy/smithy-client\";\nimport { commonParams } from \"../endpoint/EndpointParameters\";\nimport { GetRoleCredentialsRequestFilterSensitiveLog, GetRoleCredentialsResponseFilterSensitiveLog, } from \"../models/models_0\";\nimport { de_GetRoleCredentialsCommand, se_GetRoleCredentialsCommand } from \"../protocols/Aws_restJson1\";\nexport { $Command };\nexport class GetRoleCredentialsCommand extends $Command\n    .classBuilder()\n    .ep(commonParams)\n    .m(function (Command, cs, config, o) {\n    return [\n        getSerdePlugin(config, this.serialize, this.deserialize),\n        getEndpointPlugin(config, Command.getEndpointParameterInstructions()),\n    ];\n})\n    .s(\"SWBPortalService\", \"GetRoleCredentials\", {})\n    .n(\"SSOClient\", \"GetRoleCredentialsCommand\")\n    .f(GetRoleCredentialsRequestFilterSensitiveLog, GetRoleCredentialsResponseFilterSensitiveLog)\n    .ser(se_GetRoleCredentialsCommand)\n    .de(de_GetRoleCredentialsCommand)\n    .build() {\n}\n","import { resolveAwsSdkSigV4Config, } from \"@aws-sdk/core\";\nimport { getSmithyContext, normalizeProvider } from \"@smithy/util-middleware\";\nexport const defaultSSOHttpAuthSchemeParametersProvider = async (config, context, input) => {\n    return {\n        operation: getSmithyContext(context).operation,\n        region: (await normalizeProvider(config.region)()) ||\n            (() => {\n                throw new Error(\"expected `region` to be configured for `aws.auth#sigv4`\");\n            })(),\n    };\n};\nfunction createAwsAuthSigv4HttpAuthOption(authParameters) {\n    return {\n        schemeId: \"aws.auth#sigv4\",\n        signingProperties: {\n            name: \"awsssoportal\",\n            region: authParameters.region,\n        },\n        propertiesExtractor: (config, context) => ({\n            signingProperties: {\n                config,\n                context,\n            },\n        }),\n    };\n}\nfunction createSmithyApiNoAuthHttpAuthOption(authParameters) {\n    return {\n        schemeId: \"smithy.api#noAuth\",\n    };\n}\nexport const defaultSSOHttpAuthSchemeProvider = (authParameters) => {\n    const options = [];\n    switch (authParameters.operation) {\n        case \"GetRoleCredentials\": {\n            options.push(createSmithyApiNoAuthHttpAuthOption(authParameters));\n            break;\n        }\n        case \"ListAccountRoles\": {\n            options.push(createSmithyApiNoAuthHttpAuthOption(authParameters));\n            break;\n        }\n        case \"ListAccounts\": {\n            options.push(createSmithyApiNoAuthHttpAuthOption(authParameters));\n            break;\n        }\n        case \"Logout\": {\n            options.push(createSmithyApiNoAuthHttpAuthOption(authParameters));\n            break;\n        }\n        default: {\n            options.push(createAwsAuthSigv4HttpAuthOption(authParameters));\n        }\n    }\n    return options;\n};\nexport const resolveHttpAuthSchemeConfig = (config) => {\n    const config_0 = resolveAwsSdkSigV4Config(config);\n    return Object.assign(config_0, {\n        authSchemePreference: normalizeProvider(config.authSchemePreference ?? []),\n    });\n};\n","const u = \"required\", v = \"fn\", w = \"argv\", x = \"ref\";\nconst a = true, b = \"isSet\", c = \"booleanEquals\", d = \"error\", e = \"endpoint\", f = \"tree\", g = \"PartitionResult\", h = \"getAttr\", i = { [u]: false, \"type\": \"String\" }, j = { [u]: true, \"default\": false, \"type\": \"Boolean\" }, k = { [x]: \"Endpoint\" }, l = { [v]: c, [w]: [{ [x]: \"UseFIPS\" }, true] }, m = { [v]: c, [w]: [{ [x]: \"UseDualStack\" }, true] }, n = {}, o = { [v]: h, [w]: [{ [x]: g }, \"supportsFIPS\"] }, p = { [x]: g }, q = { [v]: c, [w]: [true, { [v]: h, [w]: [p, \"supportsDualStack\"] }] }, r = [l], s = [m], t = [{ [x]: \"Region\" }];\nconst _data = { version: \"1.0\", parameters: { Region: i, UseDualStack: j, UseFIPS: j, Endpoint: i }, rules: [{ conditions: [{ [v]: b, [w]: [k] }], rules: [{ conditions: r, error: \"Invalid Configuration: FIPS and custom endpoint are not supported\", type: d }, { conditions: s, error: \"Invalid Configuration: Dualstack and custom endpoint are not supported\", type: d }, { endpoint: { url: k, properties: n, headers: n }, type: e }], type: f }, { conditions: [{ [v]: b, [w]: t }], rules: [{ conditions: [{ [v]: \"aws.partition\", [w]: t, assign: g }], rules: [{ conditions: [l, m], rules: [{ conditions: [{ [v]: c, [w]: [a, o] }, q], rules: [{ endpoint: { url: \"https://portal.sso-fips.{Region}.{PartitionResult#dualStackDnsSuffix}\", properties: n, headers: n }, type: e }], type: f }, { error: \"FIPS and DualStack are enabled, but this partition does not support one or both\", type: d }], type: f }, { conditions: r, rules: [{ conditions: [{ [v]: c, [w]: [o, a] }], rules: [{ conditions: [{ [v]: \"stringEquals\", [w]: [{ [v]: h, [w]: [p, \"name\"] }, \"aws-us-gov\"] }], endpoint: { url: \"https://portal.sso.{Region}.amazonaws.com\", properties: n, headers: n }, type: e }, { endpoint: { url: \"https://portal.sso-fips.{Region}.{PartitionResult#dnsSuffix}\", properties: n, headers: n }, type: e }], type: f }, { error: \"FIPS is enabled but this partition does not support FIPS\", type: d }], type: f }, { conditions: s, rules: [{ conditions: [q], rules: [{ endpoint: { url: \"https://portal.sso.{Region}.{PartitionResult#dualStackDnsSuffix}\", properties: n, headers: n }, type: e }], type: f }, { error: \"DualStack is enabled but this partition does not support DualStack\", type: d }], type: f }, { endpoint: { url: \"https://portal.sso.{Region}.{PartitionResult#dnsSuffix}\", properties: n, headers: n }, type: e }], type: f }], type: f }, { error: \"Invalid Configuration: Missing Region\", type: d }] };\nexport const ruleSet = _data;\n","import { awsEndpointFunctions } from \"@aws-sdk/util-endpoints\";\nimport { customEndpointFunctions, EndpointCache, resolveEndpoint } from \"@smithy/util-endpoints\";\nimport { ruleSet } from \"./ruleset\";\nconst cache = new EndpointCache({\n    size: 50,\n    params: [\"Endpoint\", \"Region\", \"UseDualStack\", \"UseFIPS\"],\n});\nexport const defaultEndpointResolver = (endpointParams, context = {}) => {\n    return cache.get(endpointParams, () => resolveEndpoint(ruleSet, {\n        endpointParams: endpointParams,\n        logger: context.logger,\n    }));\n};\ncustomEndpointFunctions.aws = awsEndpointFunctions;\n","import { getHostHeaderPlugin, resolveHostHeaderConfig, } from \"@aws-sdk/middleware-host-header\";\nimport { getLoggerPlugin } from \"@aws-sdk/middleware-logger\";\nimport { getRecursionDetectionPlugin } from \"@aws-sdk/middleware-recursion-detection\";\nimport { getUserAgentPlugin, resolveUserAgentConfig, } from \"@aws-sdk/middleware-user-agent\";\nimport { resolveRegionConfig } from \"@smithy/config-resolver\";\nimport { DefaultIdentityProviderConfig, getHttpAuthSchemeEndpointRuleSetPlugin, getHttpSigningPlugin, } from \"@smithy/core\";\nimport { getContentLengthPlugin } from \"@smithy/middleware-content-length\";\nimport { resolveEndpointConfig } from \"@smithy/middleware-endpoint\";\nimport { getRetryPlugin, resolveRetryConfig } from \"@smithy/middleware-retry\";\nimport { Client as __Client, } from \"@smithy/smithy-client\";\nimport { defaultSSOHttpAuthSchemeParametersProvider, resolveHttpAuthSchemeConfig, } from \"./auth/httpAuthSchemeProvider\";\nimport { resolveClientEndpointParameters, } from \"./endpoint/EndpointParameters\";\nimport { getRuntimeConfig as __getRuntimeConfig } from \"./runtimeConfig\";\nimport { resolveRuntimeExtensions } from \"./runtimeExtensions\";\nexport { __Client };\nexport class SSOClient extends __Client {\n    config;\n    constructor(...[configuration]) {\n        const _config_0 = __getRuntimeConfig(configuration || {});\n        super(_config_0);\n        this.initConfig = _config_0;\n        const _config_1 = resolveClientEndpointParameters(_config_0);\n        const _config_2 = resolveUserAgentConfig(_config_1);\n        const _config_3 = resolveRetryConfig(_config_2);\n        const _config_4 = resolveRegionConfig(_config_3);\n        const _config_5 = resolveHostHeaderConfig(_config_4);\n        const _config_6 = resolveEndpointConfig(_config_5);\n        const _config_7 = resolveHttpAuthSchemeConfig(_config_6);\n        const _config_8 = resolveRuntimeExtensions(_config_7, configuration?.extensions || []);\n        this.config = _config_8;\n        this.middlewareStack.use(getUserAgentPlugin(this.config));\n        this.middlewareStack.use(getRetryPlugin(this.config));\n        this.middlewareStack.use(getContentLengthPlugin(this.config));\n        this.middlewareStack.use(getHostHeaderPlugin(this.config));\n        this.middlewareStack.use(getLoggerPlugin(this.config));\n        this.middlewareStack.use(getRecursionDetectionPlugin(this.config));\n        this.middlewareStack.use(getHttpAuthSchemeEndpointRuleSetPlugin(this.config, {\n            httpAuthSchemeParametersProvider: defaultSSOHttpAuthSchemeParametersProvider,\n            identityProviderConfigProvider: async (config) => new DefaultIdentityProviderConfig({\n                \"aws.auth#sigv4\": config.credentials,\n            }),\n        }));\n        this.middlewareStack.use(getHttpSigningPlugin(this.config));\n    }\n    destroy() {\n        super.destroy();\n    }\n}\n","import packageInfo from \"../package.json\";\nimport { NODE_AUTH_SCHEME_PREFERENCE_OPTIONS, emitWarningIfUnsupportedVersion as awsCheckVersion } from \"@aws-sdk/core\";\nimport { NODE_APP_ID_CONFIG_OPTIONS, createDefaultUserAgentProvider } from \"@aws-sdk/util-user-agent-node\";\nimport { NODE_REGION_CONFIG_FILE_OPTIONS, NODE_REGION_CONFIG_OPTIONS, NODE_USE_DUALSTACK_ENDPOINT_CONFIG_OPTIONS, NODE_USE_FIPS_ENDPOINT_CONFIG_OPTIONS, } from \"@smithy/config-resolver\";\nimport { Hash } from \"@smithy/hash-node\";\nimport { NODE_MAX_ATTEMPT_CONFIG_OPTIONS, NODE_RETRY_MODE_CONFIG_OPTIONS } from \"@smithy/middleware-retry\";\nimport { loadConfig as loadNodeConfig } from \"@smithy/node-config-provider\";\nimport { NodeHttpHandler as RequestHandler, streamCollector } from \"@smithy/node-http-handler\";\nimport { calculateBodyLength } from \"@smithy/util-body-length-node\";\nimport { DEFAULT_RETRY_MODE } from \"@smithy/util-retry\";\nimport { getRuntimeConfig as getSharedRuntimeConfig } from \"./runtimeConfig.shared\";\nimport { loadConfigsForDefaultMode } from \"@smithy/smithy-client\";\nimport { resolveDefaultsModeConfig } from \"@smithy/util-defaults-mode-node\";\nimport { emitWarningIfUnsupportedVersion } from \"@smithy/smithy-client\";\nexport const getRuntimeConfig = (config) => {\n    emitWarningIfUnsupportedVersion(process.version);\n    const defaultsMode = resolveDefaultsModeConfig(config);\n    const defaultConfigProvider = () => defaultsMode().then(loadConfigsForDefaultMode);\n    const clientSharedValues = getSharedRuntimeConfig(config);\n    awsCheckVersion(process.version);\n    const loaderConfig = {\n        profile: config?.profile,\n        logger: clientSharedValues.logger,\n    };\n    return {\n        ...clientSharedValues,\n        ...config,\n        runtime: \"node\",\n        defaultsMode,\n        authSchemePreference: config?.authSchemePreference ?? loadNodeConfig(NODE_AUTH_SCHEME_PREFERENCE_OPTIONS, loaderConfig),\n        bodyLengthChecker: config?.bodyLengthChecker ?? calculateBodyLength,\n        defaultUserAgentProvider: config?.defaultUserAgentProvider ??\n            createDefaultUserAgentProvider({ serviceId: clientSharedValues.serviceId, clientVersion: packageInfo.version }),\n        maxAttempts: config?.maxAttempts ?? loadNodeConfig(NODE_MAX_ATTEMPT_CONFIG_OPTIONS, config),\n        region: config?.region ??\n            loadNodeConfig(NODE_REGION_CONFIG_OPTIONS, { ...NODE_REGION_CONFIG_FILE_OPTIONS, ...loaderConfig }),\n        requestHandler: RequestHandler.create(config?.requestHandler ?? defaultConfigProvider),\n        retryMode: config?.retryMode ??\n            loadNodeConfig({\n                ...NODE_RETRY_MODE_CONFIG_OPTIONS,\n                default: async () => (await defaultConfigProvider()).retryMode || DEFAULT_RETRY_MODE,\n            }, config),\n        sha256: config?.sha256 ?? Hash.bind(null, \"sha256\"),\n        streamCollector: config?.streamCollector ?? streamCollector,\n        useDualstackEndpoint: config?.useDualstackEndpoint ?? loadNodeConfig(NODE_USE_DUALSTACK_ENDPOINT_CONFIG_OPTIONS, loaderConfig),\n        useFipsEndpoint: config?.useFipsEndpoint ?? loadNodeConfig(NODE_USE_FIPS_ENDPOINT_CONFIG_OPTIONS, loaderConfig),\n        userAgentAppId: config?.userAgentAppId ?? loadNodeConfig(NODE_APP_ID_CONFIG_OPTIONS, loaderConfig),\n    };\n};\n","import { AwsSdkSigV4Signer } from \"@aws-sdk/core\";\nimport { NoAuthSigner } from \"@smithy/core\";\nimport { NoOpLogger } from \"@smithy/smithy-client\";\nimport { parseUrl } from \"@smithy/url-parser\";\nimport { fromBase64, toBase64 } from \"@smithy/util-base64\";\nimport { fromUtf8, toUtf8 } from \"@smithy/util-utf8\";\nimport { defaultSSOHttpAuthSchemeProvider } from \"./auth/httpAuthSchemeProvider\";\nimport { defaultEndpointResolver } from \"./endpoint/endpointResolver\";\nexport const getRuntimeConfig = (config) => {\n    return {\n        apiVersion: \"2019-06-10\",\n        base64Decoder: config?.base64Decoder ?? fromBase64,\n        base64Encoder: config?.base64Encoder ?? toBase64,\n        disableHostPrefix: config?.disableHostPrefix ?? false,\n        endpointProvider: config?.endpointProvider ?? defaultEndpointResolver,\n        extensions: config?.extensions ?? [],\n        httpAuthSchemeProvider: config?.httpAuthSchemeProvider ?? defaultSSOHttpAuthSchemeProvider,\n        httpAuthSchemes: config?.httpAuthSchemes ?? [\n            {\n                schemeId: \"aws.auth#sigv4\",\n                identityProvider: (ipc) => ipc.getIdentityProvider(\"aws.auth#sigv4\"),\n                signer: new AwsSdkSigV4Signer(),\n            },\n            {\n                schemeId: \"smithy.api#noAuth\",\n                identityProvider: (ipc) => ipc.getIdentityProvider(\"smithy.api#noAuth\") || (async () => ({})),\n                signer: new NoAuthSigner(),\n            },\n        ],\n        logger: config?.logger ?? new NoOpLogger(),\n        serviceId: config?.serviceId ?? \"SSO\",\n        urlParser: config?.urlParser ?? parseUrl,\n        utf8Decoder: config?.utf8Decoder ?? fromUtf8,\n        utf8Encoder: config?.utf8Encoder ?? toUtf8,\n    };\n};\n","import { getAwsRegionExtensionConfiguration, resolveAwsRegionExtensionConfiguration, } from \"@aws-sdk/region-config-resolver\";\nimport { getHttpHandlerExtensionConfiguration, resolveHttpHandlerRuntimeConfig } from \"@smithy/protocol-http\";\nimport { getDefaultExtensionConfiguration, resolveDefaultRuntimeConfig } from \"@smithy/smithy-client\";\nimport { getHttpAuthExtensionConfiguration, resolveHttpAuthRuntimeConfig } from \"./auth/httpAuthExtensionConfiguration\";\nexport const resolveRuntimeExtensions = (runtimeConfig, extensions) => {\n    const extensionConfiguration = Object.assign(getAwsRegionExtensionConfiguration(runtimeConfig), getDefaultExtensionConfiguration(runtimeConfig), getHttpHandlerExtensionConfiguration(runtimeConfig), getHttpAuthExtensionConfiguration(runtimeConfig));\n    extensions.forEach((extension) => extension.configure(extensionConfiguration));\n    return Object.assign(runtimeConfig, resolveAwsRegionExtensionConfiguration(extensionConfiguration), resolveDefaultRuntimeConfig(extensionConfiguration), resolveHttpHandlerRuntimeConfig(extensionConfiguration), resolveHttpAuthRuntimeConfig(extensionConfiguration));\n};\n","export const getHttpAuthExtensionConfiguration = (runtimeConfig) => {\n    const _httpAuthSchemes = runtimeConfig.httpAuthSchemes;\n    let _httpAuthSchemeProvider = runtimeConfig.httpAuthSchemeProvider;\n    let _credentials = runtimeConfig.credentials;\n    return {\n        setHttpAuthScheme(httpAuthScheme) {\n            const index = _httpAuthSchemes.findIndex((scheme) => scheme.schemeId === httpAuthScheme.schemeId);\n            if (index === -1) {\n                _httpAuthSchemes.push(httpAuthScheme);\n            }\n            else {\n                _httpAuthSchemes.splice(index, 1, httpAuthScheme);\n            }\n        },\n        httpAuthSchemes() {\n            return _httpAuthSchemes;\n        },\n        setHttpAuthSchemeProvider(httpAuthSchemeProvider) {\n            _httpAuthSchemeProvider = httpAuthSchemeProvider;\n        },\n        httpAuthSchemeProvider() {\n            return _httpAuthSchemeProvider;\n        },\n        setCredentials(credentials) {\n            _credentials = credentials;\n        },\n        credentials() {\n            return _credentials;\n        },\n    };\n};\nexport const resolveHttpAuthRuntimeConfig = (config) => {\n    return {\n        httpAuthSchemes: config.httpAuthSchemes(),\n        httpAuthSchemeProvider: config.httpAuthSchemeProvider(),\n        credentials: config.credentials(),\n    };\n};\n","import { collectBodyString } from \"../common\";\nexport const parseJsonBody = (streamBody, context) => collectBodyString(streamBody, context).then((encoded) => {\n    if (encoded.length) {\n        try {\n            return JSON.parse(encoded);\n        }\n        catch (e) {\n            if (e?.name === \"SyntaxError\") {\n                Object.defineProperty(e, \"$responseBodyText\", {\n                    value: encoded,\n                });\n            }\n            throw e;\n        }\n    }\n    return {};\n});\nexport const parseJsonErrorBody = async (errorBody, context) => {\n    const value = await parseJsonBody(errorBody, context);\n    value.message = value.message ?? value.Message;\n    return value;\n};\nexport const loadRestJsonErrorCode = (output, data) => {\n    const findKey = (object, key) => Object.keys(object).find((k) => k.toLowerCase() === key.toLowerCase());\n    const sanitizeErrorCode = (rawValue) => {\n        let cleanValue = rawValue;\n        if (typeof cleanValue === \"number\") {\n            cleanValue = cleanValue.toString();\n        }\n        if (cleanValue.indexOf(\",\") >= 0) {\n            cleanValue = cleanValue.split(\",\")[0];\n        }\n        if (cleanValue.indexOf(\":\") >= 0) {\n            cleanValue = cleanValue.split(\":\")[0];\n        }\n        if (cleanValue.indexOf(\"#\") >= 0) {\n            cleanValue = cleanValue.split(\"#\")[1];\n        }\n        return cleanValue;\n    };\n    const headerKey = findKey(output.headers, \"x-amzn-errortype\");\n    if (headerKey !== undefined) {\n        return sanitizeErrorCode(output.headers[headerKey]);\n    }\n    if (data && typeof data === \"object\") {\n        const codeKey = findKey(data, \"code\");\n        if (codeKey && data[codeKey] !== undefined) {\n            return sanitizeErrorCode(data[codeKey]);\n        }\n        if (data[\"__type\"] !== undefined) {\n            return sanitizeErrorCode(data[\"__type\"]);\n        }\n    }\n};\n"],"names":["commonParams","UseFIPS","type","name","Endpoint","Region","UseDualStack","SSOServiceException","constructor","options","super","Object","setPrototypeOf","this","prototype","InvalidRequestException","$fault","opts","ResourceNotFoundException","TooManyRequestsException","UnauthorizedException","GetRoleCredentialsRequestFilterSensitiveLog","obj","accessToken","RoleCredentialsFilterSensitiveLog","secretAccessKey","sessionToken","GetRoleCredentialsResponseFilterSensitiveLog","roleCredentials","se_GetRoleCredentialsCommand","async","input","context","b","headers","_xasbt","_aT","bp","query","_rn","_rN","_ai","_aI","m","h","q","body","build","de_GetRoleCredentialsCommand","output","statusCode","de_CommandError","contents","$metadata","deserializeMetadata","data","doc","assign","parsedOutput","errorCode","de_InvalidRequestExceptionRes","de_ResourceNotFoundExceptionRes","de_TooManyRequestsExceptionRes","de_UnauthorizedExceptionRes","parsedBody","throwDefaultError","message","exception","httpStatusCode","requestId","extendedRequestId","cfId","GetRoleCredentialsCommand","classBuilder","ep","Command","cs","config","o","serialize","deserialize","getEndpointParameterInstructions","s","n","f","ser","de","defaultSSOHttpAuthSchemeParametersProvider","operation","region","Error","defaultSSOHttpAuthSchemeProvider","authParameters","push","schemeId","signingProperties","propertiesExtractor","createAwsAuthSigv4HttpAuthOption","u","v","w","x","a","c","d","e","g","i","j","k","l","p","r","t","ruleSet","version","parameters","rules","conditions","error","endpoint","url","properties","cache","size","params","defaultEndpointResolver","endpointParams","get","logger","aws","SSOClient","configuration","_config_0","process","defaultsMode","defaultConfigProvider","then","clientSharedValues","apiVersion","base64Decoder","base64Encoder","disableHostPrefix","endpointProvider","extensions","httpAuthSchemeProvider","httpAuthSchemes","identityProvider","ipc","getIdentityProvider","signer","AwsSdkSigV4Signer","serviceId","urlParser","utf8Decoder","utf8Encoder","loaderConfig","profile","runtime","authSchemePreference","NODE_AUTH_SCHEME_PREFERENCE_OPTIONS","bodyLengthChecker","defaultUserAgentProvider","clientVersion","maxAttempts","requestHandler","create","retryMode","default","sha256","bind","streamCollector","useDualstackEndpoint","useFipsEndpoint","userAgentAppId","initConfig","_config_1","defaultSigningName","_config_2","_config_3","_config_4","_config_5","_config_8","runtimeConfig","extensionConfiguration","_httpAuthSchemes","_httpAuthSchemeProvider","_credentials","credentials","setHttpAuthScheme","httpAuthScheme","index","findIndex","scheme","splice","setHttpAuthSchemeProvider","setCredentials","getHttpAuthExtensionConfiguration","forEach","extension","configure","resolveRuntimeExtensions","config_0","resolveAwsSdkSigV4Config","resolveHttpAuthSchemeConfig","middlewareStack","use","httpAuthSchemeParametersProvider","identityProviderConfigProvider","destroy","parseJsonBody","streamBody","encoded","length","JSON","parse","defineProperty","value","parseJsonErrorBody","errorBody","Message","loadRestJsonErrorCode","findKey","object","key","keys","find","toLowerCase","sanitizeErrorCode","rawValue","cleanValue","toString","indexOf","split","headerKey","undefined","codeKey"],"sourceRoot":""}