{"version":3,"file":"686.index.js","mappings":"uKAAO,MAAMA,EAAgBC,GAASC,MAAOC,IACzCF,EAAKG,QAAQC,MAAM,4DACnB,MAAM,QAAEC,EAAO,gBAAEC,EAAe,iBAAEC,EAAgB,WAAEC,EAAU,WAAEC,EAAU,OAAEC,EAAM,gBAAEC,GAAoBX,EACxG,IAAI,2BAAEY,GAA+BZ,EACrC,IAAKY,EAA4B,CAC7B,MAAM,qCAAEC,SAA+C,8BACvDD,EAA6BC,EAAqC,IAC3Db,EAAKc,aACRC,yBAA0Bf,EAAKG,OAC/Ba,mBAAoB,IACbd,GAAuBe,sBACvBjB,EAAKgB,qBAEbhB,EAAKkB,cACZ,CACA,OAAON,EAA2B,CAC9BO,QAASd,EACTe,gBAAiBd,GAAmB,sBAAsBe,KAAKC,QAC/DC,iBAAkBhB,EAClBiB,WAAYhB,EACZiB,WAAYhB,EACZiB,OAAQhB,EACRiB,gBAAiBhB,KClBnBiB,EAAiB,8BAGVC,EAAgB,CAAC7B,EAAO,CAAC,IAAMC,UACxCD,EAAKG,QAAQC,MAAM,6DACnB,MAAM0B,EAAuB9B,GAAM8B,sBAAwBC,QAAQC,IAAIJ,GACjEvB,EAAUL,GAAMK,SAAW0B,QAAQC,IAAgB,aACnD1B,EAAkBN,GAAMM,iBAAmByB,QAAQC,IAAyB,sBAClF,IAAKF,IAAyBzB,EAC1B,MAAM,IAAI,KAAyB,2CAA4C,CAC3EF,OAAQH,EAAKG,SAGrB,MAAM8B,QAAoBlC,EAAa,IAChCC,EACHO,kBAAkB,IAAA2B,cAAaJ,EAAsB,CAAEK,SAAU,UACjE9B,UACAC,mBAJsBP,GAS1B,OAHI+B,IAAyBC,QAAQC,IAAIJ,KACrC,EAAAQ,EAAA,GAAqBH,EAAa,wCAAyC,KAExEA,E","sources":["webpack://arcraft/./node_modules/.pnpm/@aws-sdk+credential-provider-web-identity@3.826.0/node_modules/@aws-sdk/credential-provider-web-identity/dist-es/fromWebToken.js","webpack://arcraft/./node_modules/.pnpm/@aws-sdk+credential-provider-web-identity@3.826.0/node_modules/@aws-sdk/credential-provider-web-identity/dist-es/fromTokenFile.js"],"sourcesContent":["export const fromWebToken = (init) => async (awsIdentityProperties) => {\n    init.logger?.debug(\"@aws-sdk/credential-provider-web-identity - fromWebToken\");\n    const { roleArn, roleSessionName, webIdentityToken, providerId, policyArns, policy, durationSeconds } = init;\n    let { roleAssumerWithWebIdentity } = init;\n    if (!roleAssumerWithWebIdentity) {\n        const { getDefaultRoleAssumerWithWebIdentity } = await import(\"@aws-sdk/nested-clients/sts\");\n        roleAssumerWithWebIdentity = getDefaultRoleAssumerWithWebIdentity({\n            ...init.clientConfig,\n            credentialProviderLogger: init.logger,\n            parentClientConfig: {\n                ...awsIdentityProperties?.callerClientConfig,\n                ...init.parentClientConfig,\n            },\n        }, init.clientPlugins);\n    }\n    return roleAssumerWithWebIdentity({\n        RoleArn: roleArn,\n        RoleSessionName: roleSessionName ?? `aws-sdk-js-session-${Date.now()}`,\n        WebIdentityToken: webIdentityToken,\n        ProviderId: providerId,\n        PolicyArns: policyArns,\n        Policy: policy,\n        DurationSeconds: durationSeconds,\n    });\n};\n","import { setCredentialFeature } from \"@aws-sdk/core/client\";\nimport { CredentialsProviderError } from \"@smithy/property-provider\";\nimport { readFileSync } from \"fs\";\nimport { fromWebToken } from \"./fromWebToken\";\nconst ENV_TOKEN_FILE = \"AWS_WEB_IDENTITY_TOKEN_FILE\";\nconst ENV_ROLE_ARN = \"AWS_ROLE_ARN\";\nconst ENV_ROLE_SESSION_NAME = \"AWS_ROLE_SESSION_NAME\";\nexport const fromTokenFile = (init = {}) => async () => {\n    init.logger?.debug(\"@aws-sdk/credential-provider-web-identity - fromTokenFile\");\n    const webIdentityTokenFile = init?.webIdentityTokenFile ?? process.env[ENV_TOKEN_FILE];\n    const roleArn = init?.roleArn ?? process.env[ENV_ROLE_ARN];\n    const roleSessionName = init?.roleSessionName ?? process.env[ENV_ROLE_SESSION_NAME];\n    if (!webIdentityTokenFile || !roleArn) {\n        throw new CredentialsProviderError(\"Web identity configuration not specified\", {\n            logger: init.logger,\n        });\n    }\n    const credentials = await fromWebToken({\n        ...init,\n        webIdentityToken: readFileSync(webIdentityTokenFile, { encoding: \"ascii\" }),\n        roleArn,\n        roleSessionName,\n    })();\n    if (webIdentityTokenFile === process.env[ENV_TOKEN_FILE]) {\n        setCredentialFeature(credentials, \"CREDENTIALS_ENV_VARS_STS_WEB_ID_TOKEN\", \"h\");\n    }\n    return credentials;\n};\n"],"names":["fromWebToken","init","async","awsIdentityProperties","logger","debug","roleArn","roleSessionName","webIdentityToken","providerId","policyArns","policy","durationSeconds","roleAssumerWithWebIdentity","getDefaultRoleAssumerWithWebIdentity","clientConfig","credentialProviderLogger","parentClientConfig","callerClientConfig","clientPlugins","RoleArn","RoleSessionName","Date","now","WebIdentityToken","ProviderId","PolicyArns","Policy","DurationSeconds","ENV_TOKEN_FILE","fromTokenFile","webIdentityTokenFile","process","env","credentials","readFileSync","encoding","setCredentialFeature"],"sourceRoot":""}